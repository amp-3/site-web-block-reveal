var W=Object.defineProperty;var K=(l,t,e)=>t in l?W(l,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):l[t]=e;var a=(l,t,e)=>K(l,typeof t!="symbol"?t+"":t,e);import{C as _,B as X,c as U,S as H,A as B,T as I,a as z,f as Y}from"./BaseInputHandler.js";import{G as g}from"./Graphics.js";var m=(l=>(l.SMALL="small",l.MEDIUM="medium",l.LARGE="large",l))(m||{}),S=(l=>(l.TYPE1="type1",l.TYPE2="type2",l))(S||{}),M=(l=>(l[l.SMALL=9]="SMALL",l[l.MEDIUM=18]="MEDIUM",l[l.LARGE=600]="LARGE",l))(M||{});class s{}a(s,"GAME",{AREA_WIDTH:480,AREA_HEIGHT:640,BACKGROUND_COLOR:4386,AREA_RATIO:1}),a(s,"BACKGROUND",{IMAGE_PATH:"./assets/images/shooting/bg_1.png",SCROLL_SPEED:.1}),a(s,"PLAYER",{DEFAULT_Y_OFFSET:100,MOVEMENT_MARGIN:20,HITBOX_RADIUS:4,SPEED:.35,SLOW_SPEED:.15,DIAGONAL_MULTIPLIER:.707,FIRE_RATE:250,MAX_HP:5,DEFAULT_LIVES:3,INVULNERABILITY_DURATION:1e3,INVULNERABILITY_BLINK_RATE:.02,SHIP_COORDS:{TOP_X:0,TOP_Y:-15,LEFT_X:-10,LEFT_Y:10,BOTTOM_CENTER_X:0,BOTTOM_CENTER_Y:5,RIGHT_X:10,RIGHT_Y:10},HP_BAR:{WIDTH:100,HEIGHT:8,OFFSET_X:-50,OFFSET_Y:-40,COLORS:{HIGH:65280,MEDIUM:16776960,LOW:16711680}},BULLET:{OFFSET_Y:-20,VELOCITY_X:0,VELOCITY_Y:-.45,DAMAGE:1,COLOR:65280,RADIUS:1.33}}),a(s,"ENEMY",{IMAGES:{TYPE1:{PATH:"./assets/images/shooting/enemy_1.png",ORIGINAL_WIDTH:96,ORIGINAL_HEIGHT:128},TYPE2:{PATH:"./assets/images/shooting/enemy_2.png",ORIGINAL_WIDTH:128,ORIGINAL_HEIGHT:96}},TYPES:{SMALL:{WIDTH:28,HEIGHT:38,HP:3,SCORE:100},MEDIUM:{WIDTH:42,HEIGHT:56,HP:3,SCORE:300},LARGE:{WIDTH:56,HEIGHT:74,HP:3,SCORE:500}},TYPE2_SIZES:{SMALL:{WIDTH:38,HEIGHT:28,HP:2,SCORE:150},MEDIUM:{WIDTH:56,HEIGHT:42,HP:5,SCORE:400},LARGE:{WIDTH:74,HEIGHT:56,HP:8,SCORE:600}},COLORS:{SMALL:16737894,MEDIUM:16724787,LARGE:16711680},HEALTH_BAR:{STROKE_WIDTH:2,COLOR:16777215,RADIUS_OFFSET:5},MOVEMENT:{TIME_MULTIPLIER:.001,DEFAULT_AMPLITUDE:50,SPEED_MIN:.05,SPEED_RANDOM:.03,SINE_AMPLITUDE_MIN:50,SINE_AMPLITUDE_RANDOM:50,SINE_FREQUENCY_MIN:1,SINE_FREQUENCY_RANDOM:1},FIRING:{INTERVAL:800,BULLET_SPEED:.2,BULLET_DAMAGE:1,SPREAD_ANGLE:30,SPREAD_COUNT:3,CIRCULAR_COUNT:8},BOUNDS_MARGIN:100}),a(s,"SPAWNING",{DEFAULT_INTERVAL:2e3,INTERVAL_REDUCTION_PER_STAGE:100,MIN_INTERVAL:1e3,MAX_COUNT_PER_WAVE:3,SPAWN_Y_OFFSET:-50,SPAWN_MARGIN:50}),a(s,"BOSS",{VISUAL_SIZE:{WIDTH:80,HEIGHT:60},COLOR:16711935,POSITION_OFFSET:{X:-40,Y:-30}}),a(s,"BULLET",{DEFAULT_RADIUS:4,DEFAULT_COLOR:16711680,BOUNDS_MARGIN:50}),a(s,"GRAZE",{RADIUS:30,SCORE_PER_BULLET:10,PARTICLE:{COUNT:8,RADIUS:2,COLOR:16776960,SPEED_MIN:50,SPEED_MAX:80,LIFETIME:.5,TARGET_FPS:60}}),a(s,"SCORE",{COMBO_MULTIPLIER:.1,BLOCK_REVEAL_THRESHOLD:1e4}),a(s,"STAGE",{DEFAULT_MAX_STAGES:3,STARTING_STAGE:1}),a(s,"INPUT",{MOVE_SPEED:1,SHOOT_COOLDOWN:100,DEFAULT_OPTIONS:{ENABLE_KEYBOARD:!0,ENABLE_MOUSE:!1,ENABLE_TOUCH:!1,ENABLE_GAMEPAD:!0,AUTO_FIRE:!0,MOUSE_CONTROL_TYPE:"relative",TOUCH_CONTROL_TYPE:"follow"},GAMEPAD:{DEADZONE:.15},MOUSE:{FOLLOW_SPEED:.1},TOUCH:{VIRTUAL_STICK_RADIUS:80,VISUAL:{BASE_COLOR:16777215,BASE_ALPHA:.2,KNOB_COLOR:16777215,KNOB_ALPHA:.5,KNOB_RADIUS:25}}}),a(s,"BLOCK_REVEAL",{FORCE_MULTIPLIER:.1,DURATION:1e3}),a(s,"BLOCK_REVEAL_EVENT",{TARGET_IMAGE_PATH:"./assets/images/shooting/target.png",TARGET_SCALE_SMALL:.16,TARGET_SCALE_MEDIUM:.24,TARGET_SCALE_LARGE:.4,PROJECTILE_RADIUS:5,PROJECTILE_COLOR:16776960,PROJECTILE_SPEED:.8}),a(s,"DIFFICULTY",{EASY:{PLAYER_SPEED_MULTIPLIER:1.2,ENEMY_SPEED_MULTIPLIER:.8,SPAWN_INTERVAL_MULTIPLIER:1.5},NORMAL:{PLAYER_SPEED_MULTIPLIER:1,ENEMY_SPEED_MULTIPLIER:1,SPAWN_INTERVAL_MULTIPLIER:1},HARD:{PLAYER_SPEED_MULTIPLIER:.9,ENEMY_SPEED_MULTIPLIER:1.3,SPAWN_INTERVAL_MULTIPLIER:.7}});class Z{constructor(){a(this,"keys",new Set);a(this,"enabled",!1);a(this,"handleKeyDown",t=>{this.enabled&&this.keys.add(t.key)});a(this,"handleKeyUp",t=>{this.keys.delete(t.key)})}enable(){this.enabled=!0,window.addEventListener("keydown",this.handleKeyDown),window.addEventListener("keyup",this.handleKeyUp)}disable(){this.enabled=!1,window.removeEventListener("keydown",this.handleKeyDown),window.removeEventListener("keyup",this.handleKeyUp),this.keys.clear()}getInputState(){let t=0,e=0;if((this.keys.has("ArrowLeft")||this.keys.has("a")||this.keys.has("A"))&&(t-=1),(this.keys.has("ArrowRight")||this.keys.has("d")||this.keys.has("D"))&&(t+=1),(this.keys.has("ArrowUp")||this.keys.has("w")||this.keys.has("W"))&&(e-=1),(this.keys.has("ArrowDown")||this.keys.has("s")||this.keys.has("S"))&&(e+=1),t!==0&&e!==0){const i=Math.sqrt(t*t+e*e);t/=i,e/=i}return{movement:{x:t,y:e},shooting:this.keys.has(" ")||this.keys.has("Space"),slowMode:this.keys.has("Shift"),pause:this.keys.has("Escape")}}update(t){}destroy(){this.disable()}}class j{constructor(t,e="relative"){a(this,"enabled",!1);a(this,"mousePosition",{x:0,y:0});a(this,"leftButtonDown",!1);a(this,"rightButtonDown",!1);a(this,"container");a(this,"controlType");a(this,"handleMouseMove",t=>{if(!this.enabled)return;const e=this.container.getBoundingClientRect();this.mousePosition={x:(t.clientX-e.left)/e.width,y:(t.clientY-e.top)/e.height}});a(this,"handleMouseDown",t=>{this.enabled&&(t.button===0&&(this.leftButtonDown=!0),t.button===2&&(this.rightButtonDown=!0))});a(this,"handleMouseUp",t=>{t.button===0&&(this.leftButtonDown=!1),t.button===2&&(this.rightButtonDown=!1)});a(this,"handleContextMenu",t=>{t.preventDefault()});this.container=t,this.controlType=e}enable(){this.enabled=!0,this.container.addEventListener("mousemove",this.handleMouseMove),this.container.addEventListener("mousedown",this.handleMouseDown),this.container.addEventListener("mouseup",this.handleMouseUp),this.container.addEventListener("contextmenu",this.handleContextMenu),document.addEventListener("mouseup",this.handleMouseUp)}disable(){this.enabled=!1,this.container.removeEventListener("mousemove",this.handleMouseMove),this.container.removeEventListener("mousedown",this.handleMouseDown),this.container.removeEventListener("mouseup",this.handleMouseUp),this.container.removeEventListener("contextmenu",this.handleContextMenu),document.removeEventListener("mouseup",this.handleMouseUp),this.leftButtonDown=!1,this.rightButtonDown=!1}getInputState(){const t={movement:{x:0,y:0},shooting:this.leftButtonDown,slowMode:this.rightButtonDown};if(this.controlType==="absolute")t.position={...this.mousePosition};else{t.movement={x:(this.mousePosition.x-.5)*2,y:(this.mousePosition.y-.5)*2};const e=Math.sqrt(t.movement.x**2+t.movement.y**2);e>1&&(t.movement.x/=e,t.movement.y/=e)}return t}update(t){}destroy(){this.disable()}}class q{constructor(t,e="follow",i){a(this,"enabled",!1);a(this,"container");a(this,"controlType");a(this,"pixiContainer");a(this,"touchId",null);a(this,"touchPosition",{x:.5,y:.5});a(this,"isTouching",!1);a(this,"isMultiTouch",!1);a(this,"stickOrigin",null);a(this,"stickRadius",s.INPUT.TOUCH.VIRTUAL_STICK_RADIUS);a(this,"stickVisualContainer");a(this,"stickBase");a(this,"stickKnob");a(this,"handleTouchStart",t=>{if(this.enabled){if(t.preventDefault(),t.touches.length>0&&this.touchId===null){const e=t.touches[0];this.touchId=e.identifier;const i=this.container.getBoundingClientRect();this.touchPosition={x:(e.clientX-i.left)/i.width,y:(e.clientY-i.top)/i.height},this.controlType==="virtual-stick"&&(this.stickOrigin={x:e.clientX-i.left,y:e.clientY-i.top},this.showVirtualStick(this.stickOrigin.x,this.stickOrigin.y)),this.isTouching=!0}t.touches.length>=2&&(this.isMultiTouch=!0)}});a(this,"handleTouchMove",t=>{if(!(!this.enabled||this.touchId===null)){t.preventDefault();for(let e=0;e<t.touches.length;e++){const i=t.touches[e];if(i.identifier===this.touchId){const r=this.container.getBoundingClientRect();if(this.controlType==="follow")this.touchPosition={x:(i.clientX-r.left)/r.width,y:(i.clientY-r.top)/r.height};else if(this.controlType==="virtual-stick"&&this.stickOrigin){const n=i.clientX-r.left,o=i.clientY-r.top,h=n-this.stickOrigin.x,d=o-this.stickOrigin.y,c=Math.sqrt(h*h+d*d),E=Math.min(c,this.stickRadius);c>0&&(this.touchPosition={x:.5+h/c*(E/this.stickRadius)*.5,y:.5+d/c*(E/this.stickRadius)*.5},this.updateVirtualStickKnob(h/c*E,d/c*E))}break}}}});a(this,"handleTouchEnd",t=>{if(!this.enabled)return;t.preventDefault();let e=!1;for(let i=0;i<t.touches.length;i++)if(t.touches[i].identifier===this.touchId){e=!0;break}e||(this.touchId=null,this.isTouching=!1,this.stickOrigin=null,this.touchPosition={x:.5,y:.5},this.hideVirtualStick()),t.touches.length<2&&(this.isMultiTouch=!1)});this.container=t,this.controlType=e,this.pixiContainer=i,this.controlType==="virtual-stick"&&i&&this.createVirtualStickVisual()}enable(){this.enabled=!0,this.container.addEventListener("touchstart",this.handleTouchStart,{passive:!1}),this.container.addEventListener("touchmove",this.handleTouchMove,{passive:!1}),this.container.addEventListener("touchend",this.handleTouchEnd,{passive:!1}),this.container.addEventListener("touchcancel",this.handleTouchEnd,{passive:!1})}disable(){this.enabled=!1,this.container.removeEventListener("touchstart",this.handleTouchStart),this.container.removeEventListener("touchmove",this.handleTouchMove),this.container.removeEventListener("touchend",this.handleTouchEnd),this.container.removeEventListener("touchcancel",this.handleTouchEnd),this.reset()}reset(){this.touchId=null,this.isTouching=!1,this.isMultiTouch=!1,this.stickOrigin=null,this.touchPosition={x:.5,y:.5}}getInputState(){const t={movement:{x:0,y:0},shooting:this.isTouching&&!this.isMultiTouch,slowMode:this.isMultiTouch};return this.controlType==="follow"&&this.isTouching?t.position={...this.touchPosition}:this.controlType==="virtual-stick"&&this.isTouching&&(t.movement={x:(this.touchPosition.x-.5)*2,y:(this.touchPosition.y-.5)*2}),t}update(t){}destroy(){this.disable(),this.stickVisualContainer&&this.pixiContainer&&(this.pixiContainer.removeChild(this.stickVisualContainer),this.stickVisualContainer.destroy({children:!0}))}createVirtualStickVisual(){this.pixiContainer&&(this.stickVisualContainer=new _,this.stickVisualContainer.visible=!1,this.stickBase=new g,this.stickBase.lineStyle(3,s.INPUT.TOUCH.VISUAL.BASE_COLOR,s.INPUT.TOUCH.VISUAL.BASE_ALPHA),this.stickBase.beginFill(s.INPUT.TOUCH.VISUAL.BASE_COLOR,s.INPUT.TOUCH.VISUAL.BASE_ALPHA),this.stickBase.drawCircle(0,0,this.stickRadius),this.stickBase.endFill(),this.stickKnob=new g,this.stickKnob.beginFill(s.INPUT.TOUCH.VISUAL.KNOB_COLOR,s.INPUT.TOUCH.VISUAL.KNOB_ALPHA),this.stickKnob.drawCircle(0,0,s.INPUT.TOUCH.VISUAL.KNOB_RADIUS),this.stickKnob.endFill(),this.stickVisualContainer.addChild(this.stickBase),this.stickVisualContainer.addChild(this.stickKnob),this.pixiContainer.addChild(this.stickVisualContainer))}showVirtualStick(t,e){this.stickVisualContainer&&(this.stickVisualContainer.position.set(t,e),this.stickVisualContainer.visible=!0,this.stickKnob&&this.stickKnob.position.set(0,0))}hideVirtualStick(){this.stickVisualContainer&&(this.stickVisualContainer.visible=!1)}updateVirtualStickKnob(t,e){this.stickKnob&&this.stickKnob.position.set(t,e)}}class J{constructor(t=s.INPUT.GAMEPAD.DEADZONE){a(this,"enabled",!1);a(this,"deadzone",s.INPUT.GAMEPAD.DEADZONE);a(this,"gamepadIndex",null);a(this,"handleGamepadConnected",t=>{this.gamepadIndex===null&&(this.gamepadIndex=t.gamepad.index,console.log(`Gamepad connected: ${t.gamepad.id}`))});a(this,"handleGamepadDisconnected",t=>{this.gamepadIndex===t.gamepad.index&&(this.gamepadIndex=null,console.log(`Gamepad disconnected: ${t.gamepad.id}`))});this.deadzone=t}enable(){this.enabled=!0,window.addEventListener("gamepadconnected",this.handleGamepadConnected),window.addEventListener("gamepaddisconnected",this.handleGamepadDisconnected);const t=navigator.getGamepads();for(let e=0;e<t.length;e++){const i=t[e];if(i){this.gamepadIndex=e,console.log(`Gamepad already connected: ${i.id}`);break}}}disable(){this.enabled=!1,window.removeEventListener("gamepadconnected",this.handleGamepadConnected),window.removeEventListener("gamepaddisconnected",this.handleGamepadDisconnected),this.gamepadIndex=null}applyDeadzone(t){return Math.abs(t)>this.deadzone?t:0}getInputState(){var h,d,c,E,u,p,A,T;const t={movement:{x:0,y:0},shooting:!1,slowMode:!1,pause:!1};if(!this.enabled||this.gamepadIndex===null)return t;const i=navigator.getGamepads()[this.gamepadIndex];if(!i)return t;let r=this.applyDeadzone(i.axes[0]),n=this.applyDeadzone(i.axes[1]);(h=i.buttons[14])!=null&&h.pressed&&(r-=1),(d=i.buttons[15])!=null&&d.pressed&&(r+=1),(c=i.buttons[12])!=null&&c.pressed&&(n-=1),(E=i.buttons[13])!=null&&E.pressed&&(n+=1);const o=Math.sqrt(r*r+n*n);return o>1&&(r/=o,n/=o),t.movement={x:r,y:n},t.shooting=((u=i.buttons[0])==null?void 0:u.pressed)||!1,t.slowMode=((p=i.buttons[6])==null?void 0:p.pressed)||((A=i.buttons[7])==null?void 0:A.pressed)||!1,t.pause=((T=i.buttons[9])==null?void 0:T.pressed)||!1,t}update(t){}destroy(){this.disable()}}class Q extends X{constructor(e,i){super({container:{eventMode:"none"},onInput:()=>{}});a(this,"controller");a(this,"moveSpeed",s.INPUT.MOVE_SPEED);a(this,"inputHandlers",[]);a(this,"keyboardHandler");a(this,"mouseHandler");a(this,"touchHandler");a(this,"gamepadHandler");a(this,"options");a(this,"autoFire");a(this,"lastShootTime",0);a(this,"shootCooldown",s.INPUT.SHOOT_COOLDOWN);this.controller=e,this.options={enableKeyboard:!0,enableMouse:!1,enableTouch:!1,enableGamepad:!0,autoFire:!0,mouseControlType:"relative",touchControlType:"follow",...i},this.autoFire=this.options.autoFire??!0,this.initializeInputHandlers()}initializeInputHandlers(){const e=this.controller.getCanvas(),i=this.controller.getGameContainer();this.options.enableKeyboard&&(this.keyboardHandler=new Z,this.inputHandlers.push(this.keyboardHandler)),this.options.enableMouse&&(this.mouseHandler=new j(e,this.options.mouseControlType),this.inputHandlers.push(this.mouseHandler)),this.options.enableTouch&&(this.touchHandler=new q(e,this.options.touchControlType,i),this.inputHandlers.push(this.touchHandler)),this.options.enableGamepad&&(this.gamepadHandler=new J,this.inputHandlers.push(this.gamepadHandler))}setupEventListeners(){}onEnable(){this.inputHandlers.forEach(e=>e.enable())}onDisable(){this.inputHandlers.forEach(e=>e.disable())}handleKeyDown(e){this.isEnabled}getCombinedInputState(){const e={movement:{x:0,y:0},shooting:!1,slowMode:!1,pause:!1};for(const i of this.inputHandlers){const r=i.getInputState();Math.abs(r.movement.x)>Math.abs(e.movement.x)&&(e.movement.x=r.movement.x),Math.abs(r.movement.y)>Math.abs(e.movement.y)&&(e.movement.y=r.movement.y),r.position&&(e.position=r.position),e.shooting=e.shooting||r.shooting,e.slowMode=e.slowMode||r.slowMode,r.pause!==void 0&&(e.pause=e.pause||r.pause)}return e}updateMovement(e){if(!this.isEnabled)return;const i=this.getCombinedInputState(),r=Date.now();if(this.controller.setPlayerSlowMode(i.slowMode),i.position)this.controller.movePlayerToPosition(i.position.x,i.position.y,e);else if(i.movement.x!==0||i.movement.y!==0){let n=i.movement.x*this.moveSpeed,o=i.movement.y*this.moveSpeed;this.controller.movePlayer(n,o,e)}(this.autoFire||i.shooting)&&!this.autoFire&&r-this.lastShootTime>=this.shootCooldown&&(this.controller.playerShoot(),this.lastShootTime=r),i.pause}setAutoFire(e){this.autoFire=e}isAutoFireEnabled(){return this.autoFire}destroy(){this.disable(),this.inputHandlers.forEach(e=>e.destroy()),this.inputHandlers=[]}}class w{constructor(t){a(this,"sprite");a(this,"vx");a(this,"vy");a(this,"damage");a(this,"isPlayerBullet");a(this,"radius");this.vx=t.vx,this.vy=t.vy,this.damage=t.damage,this.isPlayerBullet=t.isPlayerBullet,this.radius=t.radius||s.BULLET.DEFAULT_RADIUS,this.sprite=new g,this.sprite.circle(0,0,this.radius).fill(t.color||s.BULLET.DEFAULT_COLOR),this.sprite.x=t.x,this.sprite.y=t.y}update(t,e){const i=t/e;this.sprite.x+=this.vx*i,this.sprite.y+=this.vy*i}isOutOfBounds(t,e){const i=s.BULLET.BOUNDS_MARGIN;return this.sprite.x<-i||this.sprite.x>t+i||this.sprite.y<-i||this.sprite.y>e+i}getSprite(){return this.sprite}getX(){return this.sprite.x}getY(){return this.sprite.y}getRadius(){return this.radius}getDamage(){return this.damage}getIsPlayerBullet(){return this.isPlayerBullet}}class ${constructor(t){a(this,"sprite");a(this,"shipSprite");a(this,"hitboxSprite");a(this,"hpBarContainer");a(this,"hpBarBg");a(this,"hpBarFill");a(this,"config");a(this,"slowMode",!1);a(this,"lastFireTime",0);a(this,"gameTime",0);a(this,"lives",s.PLAYER.DEFAULT_LIVES);a(this,"currentHp");a(this,"maxHp");a(this,"invulnerable",!1);a(this,"invulnerableTime",0);this.config=t,this.maxHp=t.maxHp,this.currentHp=this.maxHp,this.sprite=new _,this.shipSprite=new g,this.drawShip(),this.sprite.addChild(this.shipSprite),this.hitboxSprite=new g,this.drawHitbox(),this.hitboxSprite.visible=!1,this.sprite.addChild(this.hitboxSprite),this.hpBarContainer=new _,this.hpBarBg=new g,this.hpBarFill=new g,this.setupHpBar(),this.sprite.x=t.x,this.sprite.y=t.y}drawShip(){this.shipSprite.clear(),this.shipSprite.moveTo(s.PLAYER.SHIP_COORDS.TOP_X,s.PLAYER.SHIP_COORDS.TOP_Y),this.shipSprite.lineTo(s.PLAYER.SHIP_COORDS.LEFT_X,s.PLAYER.SHIP_COORDS.LEFT_Y),this.shipSprite.lineTo(s.PLAYER.SHIP_COORDS.BOTTOM_CENTER_X,s.PLAYER.SHIP_COORDS.BOTTOM_CENTER_Y),this.shipSprite.lineTo(s.PLAYER.SHIP_COORDS.RIGHT_X,s.PLAYER.SHIP_COORDS.RIGHT_Y),this.shipSprite.closePath(),this.shipSprite.fill(65280)}drawHitbox(){this.hitboxSprite.clear(),this.hitboxSprite.circle(0,0,this.config.hitboxRadius).fill({color:16711680,alpha:.5})}setupHpBar(){this.hpBarContainer.x=s.PLAYER.HP_BAR.OFFSET_X,this.hpBarContainer.y=s.PLAYER.HP_BAR.OFFSET_Y,this.hpBarBg.rect(0,0,s.PLAYER.HP_BAR.WIDTH,s.PLAYER.HP_BAR.HEIGHT).fill(3355443),this.hpBarContainer.addChild(this.hpBarBg),this.drawHpBar(),this.hpBarContainer.addChild(this.hpBarFill),this.sprite.addChild(this.hpBarContainer)}drawHpBar(){this.hpBarFill.clear();const t=this.currentHp/this.maxHp,e=s.PLAYER.HP_BAR.WIDTH*t;let i=s.PLAYER.HP_BAR.COLORS.HIGH;t<=.5&&(i=s.PLAYER.HP_BAR.COLORS.MEDIUM),t<=.25&&(i=s.PLAYER.HP_BAR.COLORS.LOW),this.hpBarFill.rect(0,0,e,s.PLAYER.HP_BAR.HEIGHT).fill(i)}update(t,e){const i=t/e;this.gameTime+=i,this.invulnerable&&(this.invulnerableTime-=i,this.invulnerableTime<=0?(this.invulnerable=!1,this.sprite.alpha=1):this.sprite.alpha=Math.sin(this.invulnerableTime*s.PLAYER.INVULNERABILITY_BLINK_RATE)>0?1:.5)}move(t,e,i,r){const n=this.slowMode?this.config.slowSpeed:this.config.speed,o=i/r;this.sprite.x+=t*n*o,this.sprite.y+=e*n*o}clampPosition(t,e,i,r){this.sprite.x=Math.max(t+s.PLAYER.MOVEMENT_MARGIN,Math.min(i-s.PLAYER.MOVEMENT_MARGIN,this.sprite.x)),this.sprite.y=Math.max(e+s.PLAYER.MOVEMENT_MARGIN,Math.min(r-s.PLAYER.MOVEMENT_MARGIN,this.sprite.y))}setSlowMode(t){this.slowMode=t,this.hitboxSprite.visible=t}canShoot(){return this.gameTime-this.lastFireTime>=this.config.fireRate}shoot(){if(!this.canShoot())return[];this.lastFireTime=this.gameTime;const t=[],e=new w({x:this.sprite.x,y:this.sprite.y+s.PLAYER.BULLET.OFFSET_Y,vx:s.PLAYER.BULLET.VELOCITY_X,vy:s.PLAYER.BULLET.VELOCITY_Y,damage:s.PLAYER.BULLET.DAMAGE,isPlayerBullet:!0,color:s.PLAYER.BULLET.COLOR,radius:s.PLAYER.BULLET.RADIUS});return t.push(e),t}tryAutoShoot(){return this.shoot()}takeDamage(t=1){if(!this.invulnerable){if(this.currentHp-=t,this.drawHpBar(),this.currentHp<=0)if(this.currentHp=0,this.lives--,this.lives>0)this.currentHp=this.maxHp,this.drawHpBar();else{console.log("Game Over");return}this.invulnerable=!0,this.invulnerableTime=s.PLAYER.INVULNERABILITY_DURATION}}reset(){this.sprite.x=this.config.x,this.sprite.y=this.config.y,this.lives=s.PLAYER.DEFAULT_LIVES,this.currentHp=this.maxHp,this.drawHpBar(),this.invulnerable=!1,this.invulnerableTime=0,this.sprite.alpha=1,this.slowMode=!1,this.hitboxSprite.visible=!1,this.gameTime=0,this.lastFireTime=0}getSprite(){return this.sprite}getX(){return this.sprite.x}getY(){return this.sprite.y}getHitboxRadius(){return this.config.hitboxRadius}isInvulnerable(){return this.invulnerable}getCurrentHp(){return this.currentHp}getMaxHp(){return this.maxHp}getLives(){return this.lives}}class ee{constructor(t){a(this,"currentStage",1);a(this,"maxStages");a(this,"isStageActive",!0);a(this,"isBossPhase",!1);this.maxStages=t}getCurrentStage(){return this.currentStage}isActive(){return this.isStageActive}isBossActive(){return this.isBossPhase}startBossPhase(){this.isBossPhase=!0}completeBossPhase(){this.isBossPhase=!1,this.nextStage()}nextStage(){this.currentStage<this.maxStages?this.currentStage++:this.isStageActive=!1}reset(){this.currentStage=1,this.isStageActive=!0,this.isBossPhase=!1}}class te{constructor(t,e,i){a(this,"sprite");a(this,"healthBar");a(this,"config");a(this,"hp");a(this,"maxHp");a(this,"time",0);a(this,"lastFireTime",0);a(this,"startX");a(this,"startY");a(this,"baseY");a(this,"shouldFireNow",!1);this.config=t,this.hp=t.hp,this.maxHp=t.hp,this.startX=e,this.startY=i,this.baseY=i,this.createSprite(),this.createHealthBar(),this.sprite.x=e,this.sprite.y=i}createSprite(){const e=(this.config.imageType||S.TYPE1)===S.TYPE1?s.ENEMY.IMAGES.TYPE1.PATH:s.ENEMY.IMAGES.TYPE2.PATH,i=U.from(e);this.sprite=new H(i),this.sprite.anchor.set(.5,.5);const r=this.getDimensionsByType();this.sprite.width=r.width,this.sprite.height=r.height}createHealthBar(){this.healthBar=new g,this.sprite.addChild(this.healthBar),this.updateHealthBar()}updateHealthBar(){if(this.healthBar.clear(),this.hp<this.maxHp){const t=this.getDimensionsByType(),e=Math.max(t.width,t.height)/2+s.ENEMY.HEALTH_BAR.RADIUS_OFFSET;this.healthBar.lineStyle(s.ENEMY.HEALTH_BAR.STROKE_WIDTH,s.ENEMY.HEALTH_BAR.COLOR),this.healthBar.arc(0,0,e,-Math.PI/2,-Math.PI/2+Math.PI*2*this.hp/this.maxHp)}}getDimensionsByType(){const e=(this.config.imageType||S.TYPE1)===S.TYPE1?s.ENEMY.TYPES:s.ENEMY.TYPE2_SIZES;switch(this.config.type){case"small":return{width:e.SMALL.WIDTH,height:e.SMALL.HEIGHT};case"medium":return{width:e.MEDIUM.WIDTH,height:e.MEDIUM.HEIGHT};case"large":return{width:e.LARGE.WIDTH,height:e.LARGE.HEIGHT};default:return{width:e.SMALL.WIDTH,height:e.SMALL.HEIGHT}}}update(t,e){const i=t/e;this.time+=i,this.updateMovement(i),this.shouldFireNow=this.updateFiring()}updateMovement(t){const e=this.config.movement,i=this.time*s.ENEMY.MOVEMENT.TIME_MULTIPLIER;switch(e.type){case"linear":this.sprite.y+=e.speed*t;break;case"sine":this.sprite.x=this.startX+Math.sin(i*(e.frequency||1))*(e.amplitude||s.ENEMY.MOVEMENT.DEFAULT_AMPLITUDE),this.sprite.y+=e.speed*t;break;case"circular":const r=i*(e.frequency||1);this.baseY+=e.speed*t,this.sprite.x=this.startX+Math.cos(r)*(e.amplitude||s.ENEMY.MOVEMENT.DEFAULT_AMPLITUDE),this.sprite.y=this.baseY+Math.sin(r)*(e.amplitude||s.ENEMY.MOVEMENT.DEFAULT_AMPLITUDE);break;case"custom":if(e.customFunction){const n=e.customFunction(i);this.sprite.x=this.startX+n.x,this.sprite.y=this.startY+n.y}break}}updateFiring(){if(!this.config.firePattern)return!1;const t=this.config.firePattern;return this.time-this.lastFireTime>=t.interval?(this.lastFireTime=this.time,!0):!1}shouldFire(){return this.shouldFireNow}createBullets(t){const e=[];switch(t.type){case"single":e.push(new w({x:this.sprite.x,y:this.sprite.y,vx:0,vy:t.bulletSpeed,damage:s.ENEMY.FIRING.BULLET_DAMAGE,isPlayerBullet:!1}));break;case"spread":const i=t.bulletCount||s.ENEMY.FIRING.SPREAD_COUNT,r=t.spreadAngle||s.ENEMY.FIRING.SPREAD_ANGLE;for(let o=0;o<i;o++){const h=r*(o-(i-1)/2)*Math.PI/180;e.push(new w({x:this.sprite.x,y:this.sprite.y,vx:Math.sin(h)*t.bulletSpeed,vy:Math.cos(h)*t.bulletSpeed,damage:s.ENEMY.FIRING.BULLET_DAMAGE,isPlayerBullet:!1}))}break;case"circular":const n=t.bulletCount||s.ENEMY.FIRING.CIRCULAR_COUNT;for(let o=0;o<n;o++){const h=360/n*o*Math.PI/180;e.push(new w({x:this.sprite.x,y:this.sprite.y,vx:Math.cos(h)*t.bulletSpeed,vy:Math.sin(h)*t.bulletSpeed,damage:s.ENEMY.FIRING.BULLET_DAMAGE,isPlayerBullet:!1}))}break}return e}takeDamage(t){this.hp-=t,this.updateHealthBar()}isAlive(){return this.hp>0}isOutOfBounds(t,e){const i=s.ENEMY.BOUNDS_MARGIN;return this.sprite.x<-i||this.sprite.x>t+i||this.sprite.y>e+i}getSprite(){return this.sprite}getX(){return this.sprite.x}getY(){return this.sprite.y}getRadius(){const t=this.getDimensionsByType();return Math.max(t.width,t.height)/2}getScore(){return this.config.score}getFirePattern(){return this.config.firePattern}}class ie{constructor(t,e){a(this,"spawnTimer",0);a(this,"spawnInterval",s.SPAWNING.DEFAULT_INTERVAL);a(this,"gameWidth");this.gameWidth=t}update(t,e,i){const r=t/i;this.spawnTimer+=r;const n=[];if(this.spawnTimer>=this.spawnInterval){this.spawnTimer=0;const o=Math.min(e,s.SPAWNING.MAX_COUNT_PER_WAVE);for(let h=0;h<o;h++)n.push(this.createEnemy(e));this.spawnInterval=Math.max(s.SPAWNING.MIN_INTERVAL,s.SPAWNING.DEFAULT_INTERVAL-e*s.SPAWNING.INTERVAL_REDUCTION_PER_STAGE)}return n}createEnemy(t){const e=Math.random()*(this.gameWidth-s.SPAWNING.SPAWN_MARGIN*2)+s.SPAWNING.SPAWN_MARGIN,i=s.SPAWNING.SPAWN_Y_OFFSET,n=[m.SMALL,m.MEDIUM,m.LARGE][Math.min(Math.floor(Math.random()*t),2)],o=Math.random()<.3+t*.1?S.TYPE2:S.TYPE1;let h,d;if(o===S.TYPE1)switch(n){case m.SMALL:h=s.ENEMY.TYPES.SMALL.HP,d=s.ENEMY.TYPES.SMALL.SCORE;break;case m.MEDIUM:h=s.ENEMY.TYPES.MEDIUM.HP,d=s.ENEMY.TYPES.MEDIUM.SCORE;break;case m.LARGE:h=s.ENEMY.TYPES.LARGE.HP,d=s.ENEMY.TYPES.LARGE.SCORE;break}else switch(n){case m.SMALL:h=s.ENEMY.TYPE2_SIZES.SMALL.HP,d=s.ENEMY.TYPE2_SIZES.SMALL.SCORE;break;case m.MEDIUM:h=s.ENEMY.TYPE2_SIZES.MEDIUM.HP,d=s.ENEMY.TYPE2_SIZES.MEDIUM.SCORE;break;case m.LARGE:h=s.ENEMY.TYPE2_SIZES.LARGE.HP,d=s.ENEMY.TYPE2_SIZES.LARGE.SCORE;break}const c=o===S.TYPE2?Math.random()>.3?"circular":"sine":Math.random()>.5?"sine":"linear";let E;return o===S.TYPE2?E={type:Math.random()>.5?"spread":"circular",interval:s.ENEMY.FIRING.INTERVAL*1.2,bulletSpeed:s.ENEMY.FIRING.BULLET_SPEED*.8,bulletCount:n===m.LARGE?5:3,spreadAngle:45}:E={type:"single",interval:s.ENEMY.FIRING.INTERVAL,bulletSpeed:s.ENEMY.FIRING.BULLET_SPEED},new te({type:n,imageType:o,hp:h,score:d,movement:{type:c,speed:s.ENEMY.MOVEMENT.SPEED_MIN+Math.random()*s.ENEMY.MOVEMENT.SPEED_RANDOM,amplitude:c!=="linear"?s.ENEMY.MOVEMENT.SINE_AMPLITUDE_MIN+Math.random()*s.ENEMY.MOVEMENT.SINE_AMPLITUDE_RANDOM:void 0,frequency:c!=="linear"?s.ENEMY.MOVEMENT.SINE_FREQUENCY_MIN+Math.random()*s.ENEMY.MOVEMENT.SINE_FREQUENCY_RANDOM:void 0},firePattern:E},e,i)}reset(){this.spawnTimer=0,this.spawnInterval=s.SPAWNING.DEFAULT_INTERVAL}}class se{constructor(t,e,i,r,n,o){a(this,"player");a(this,"getEnemies");a(this,"getEnemyBullets");a(this,"getPlayerBullets");this.player=t,this.getEnemies=e,this.getEnemyBullets=i,this.getPlayerBullets=r}check(){const t={playerHit:!1,destroyedEnemies:[],hitBullets:[],hitPlayerBullets:[]},e=this.getEnemies(),i=this.getEnemyBullets(),r=this.getPlayerBullets();if(!this.player.isInvulnerable())for(const n of i)this.checkCircleCollision(this.player.getX(),this.player.getY(),this.player.getHitboxRadius(),n.getX(),n.getY(),n.getRadius())&&(t.playerHit=!0,t.hitBullets.push(n));for(const n of r)for(const o of e)if(o.isAlive()&&this.checkCircleCollision(n.getX(),n.getY(),n.getRadius(),o.getX(),o.getY(),o.getRadius())){o.takeDamage(n.getDamage()),t.hitPlayerBullets.push(n),o.isAlive()||t.destroyedEnemies.push(o);break}return t}checkCircleCollision(t,e,i,r,n,o){const h=r-t,d=n-e;return Math.sqrt(h*h+d*d)<i+o}}class ae{constructor(){a(this,"score",0);a(this,"highScore",0);a(this,"combo",0);a(this,"maxCombo",0);const t=localStorage.getItem("shootingHighScore");t&&(this.highScore=parseInt(t,10))}addScore(t){this.score+=t*(1+this.combo*s.SCORE.COMBO_MULTIPLIER),this.combo++,this.maxCombo=Math.max(this.maxCombo,this.combo),this.score>this.highScore&&(this.highScore=this.score,localStorage.setItem("shootingHighScore",this.highScore.toString()))}resetCombo(){this.combo=0}getScore(){return Math.floor(this.score)}getHighScore(){return Math.floor(this.highScore)}getCombo(){return this.combo}reset(){this.score=0,this.combo=0,this.maxCombo=0}}class re{constructor(){a(this,"grazeRadius",s.GRAZE.RADIUS);a(this,"grazedBullets",new Set)}checkGraze(t,e){let i=0;const r=[];for(const o of e)if(!o.getIsPlayerBullet()&&!this.grazedBullets.has(o)){const h=this.getDistance(t.getX(),t.getY(),o.getX(),o.getY());h<this.grazeRadius&&h>t.getHitboxRadius()+o.getRadius()&&(this.grazedBullets.add(o),i++,r.push({bullet:o,x:o.getX(),y:o.getY()}))}const n=new Set(e);for(const o of this.grazedBullets)n.has(o)||this.grazedBullets.delete(o);return{count:i,events:r}}createGrazeEffect(t,e,i){const r=s.GRAZE.PARTICLE.COUNT;for(let n=0;n<r;n++){const o=new g;o.circle(0,0,s.GRAZE.PARTICLE.RADIUS).fill(s.GRAZE.PARTICLE.COLOR);const h=n/r*Math.PI*2,d=s.GRAZE.PARTICLE.SPEED_MIN+Math.random()*(s.GRAZE.PARTICLE.SPEED_MAX-s.GRAZE.PARTICLE.SPEED_MIN),c=Math.cos(h)*d,E=Math.sin(h)*d;o.x=e,o.y=i,t.addChild(o);let u=s.GRAZE.PARTICLE.LIFETIME;const p=()=>{if(u-=1/s.GRAZE.PARTICLE.TARGET_FPS,u<=0){t.removeChild(o);return}o.x+=c*(1/s.GRAZE.PARTICLE.TARGET_FPS),o.y+=E*(1/s.GRAZE.PARTICLE.TARGET_FPS),o.alpha=u/s.GRAZE.PARTICLE.LIFETIME,requestAnimationFrame(p)};requestAnimationFrame(p)}}getDistance(t,e,i,r){const n=i-t,o=r-e;return Math.sqrt(n*n+o*o)}reset(){this.grazedBullets.clear()}}class oe{constructor(t,e,i,r,n){a(this,"events",new Map);a(this,"gameContainer");a(this,"blockReveal");a(this,"overlayContainer");a(this,"blockRevealOverlayContainer",null);a(this,"blockRevealApp",null);a(this,"targetTexture",null);a(this,"eventIdCounter",0);this.gameContainer=t,this.blockReveal=e,this.blockRevealApp=n||null,this.overlayContainer=new _,this.gameContainer.addChild(this.overlayContainer),this.blockRevealApp&&(this.blockRevealOverlayContainer=new _,this.blockRevealApp.stage.addChild(this.blockRevealOverlayContainer)),this.loadTargetTexture()}async loadTargetTexture(){try{this.targetTexture=await B.load(s.BLOCK_REVEAL_EVENT.TARGET_IMAGE_PATH),console.log("Target texture loaded successfully")}catch(t){console.error("Failed to load target texture:",t)}}triggerReveal(t,e,i,r,n){var v,O;if(!this.targetTexture){console.warn("Target texture not loaded yet");return}if(!this.blockReveal){console.warn("BlockRevealComponent not initialized yet");return}const o=Math.random(),h=Math.random(),d=`reveal_${this.eventIdCounter++}`,c=new H(this.targetTexture),E=this.getTargetScale(i);c.scale.set(E),c.anchor.set(.5);const u=((v=this.blockRevealApp)==null?void 0:v.canvas.width)||480,p=((O=this.blockRevealApp)==null?void 0:O.canvas.height)||640,A=this.gameContainer.width||480,T=A+o*u,f=h*p;c.position.set(T,f),this.overlayContainer.addChild(c),console.log("Target position:",{normalized:{x:o,y:h},gamePos:{x:T,y:f},gameAreaWidth:A,blockCanvasSize:{width:u,height:p},scale:E});const y=new g;y.circle(0,0,s.BLOCK_REVEAL_EVENT.PROJECTILE_RADIUS),y.fill(s.BLOCK_REVEAL_EVENT.PROJECTILE_COLOR),y.position.set(t,e),this.overlayContainer.addChild(y),console.log("Projectile initial position:",{gameCoords:{x:t,y:e}});let L,R;if(this.blockRevealApp&&this.blockRevealOverlayContainer){L=new H(this.targetTexture),L.scale.set(E),L.anchor.set(.5);const N=this.blockRevealApp.canvas.width,k=this.blockRevealApp.canvas.height,D=o*N,C=h*k;L.position.set(D,C),this.blockRevealOverlayContainer.addChild(L),R=new g,R.circle(0,0,s.BLOCK_REVEAL_EVENT.PROJECTILE_RADIUS),R.fill(s.BLOCK_REVEAL_EVENT.PROJECTILE_COLOR),R.position.set(-50,C),this.blockRevealOverlayContainer.addChild(R),console.log("Block reveal sprites created:",{targetPos:{x:D,y:C},projectilePos:{x:-50,y:C},canvasSize:{width:N,height:k}})}const P={id:d,sourceX:t,sourceY:e,targetX:o,targetY:h,radius:i,targetSprite:c,projectileSprite:y,blockRevealTargetSprite:L,blockRevealProjectileSprite:R,startTime:performance.now()};this.events.set(d,P),this.startProjectileAnimation(P,r,n)}getTargetScale(t){switch(t){case M.SMALL:return s.BLOCK_REVEAL_EVENT.TARGET_SCALE_SMALL;case M.MEDIUM:return s.BLOCK_REVEAL_EVENT.TARGET_SCALE_MEDIUM;case M.LARGE:return s.BLOCK_REVEAL_EVENT.TARGET_SCALE_LARGE;default:return 1}}startProjectileAnimation(t,e,i){var T,f;const r=((T=this.blockRevealApp)==null?void 0:T.canvas.width)||480,n=((f=this.blockRevealApp)==null?void 0:f.canvas.height)||640,h=(this.gameContainer.width||480)+t.targetX*r,d=t.targetY*n,c=t.projectileSprite.position,E=Math.sqrt(Math.pow(h-c.x,2)+Math.pow(d-c.y,2)),u=E/s.BLOCK_REVEAL_EVENT.PROJECTILE_SPEED;console.log("Animation start:",{from:{x:c.x,y:c.y},to:{x:h,y:d},distance:E,duration:u});const p=I.shared,A=()=>{const L=performance.now()-t.startTime,R=Math.min(L/u,1),P=1-Math.pow(1-R,3),v=t.sourceX,O=t.sourceY,N=v+(h-v)*P,k=O+(d-O)*P;if(t.projectileSprite.position.set(N,k),t.blockRevealProjectileSprite&&this.blockRevealApp){const D=this.blockRevealApp.canvas.width,C=t.targetX*D,F=t.targetY*this.blockRevealApp.canvas.height,x=-50,V=x+(C-x)*P;t.blockRevealProjectileSprite.position.set(V,F)}R>=1&&(p.remove(A),this.onProjectileReachTarget(t,e,i))};p.add(A)}onProjectileReachTarget(t,e,i){this.blockReveal.reveal({x:t.targetX,y:t.targetY,radius:t.radius,force:e||t.radius*s.BLOCK_REVEAL.FORCE_MULTIPLIER,duration:i||s.BLOCK_REVEAL.DURATION}),this.overlayContainer.removeChild(t.targetSprite),this.overlayContainer.removeChild(t.projectileSprite),t.targetSprite.destroy(),t.projectileSprite.destroy(),t.blockRevealTargetSprite&&this.blockRevealOverlayContainer&&(this.blockRevealOverlayContainer.removeChild(t.blockRevealTargetSprite),t.blockRevealTargetSprite.destroy()),t.blockRevealProjectileSprite&&this.blockRevealOverlayContainer&&(this.blockRevealOverlayContainer.removeChild(t.blockRevealProjectileSprite),t.blockRevealProjectileSprite.destroy()),this.events.delete(t.id)}destroy(){var t;this.events.forEach(e=>{var i,r;e.targetSprite.parent&&e.targetSprite.parent.removeChild(e.targetSprite),e.projectileSprite.parent&&e.projectileSprite.parent.removeChild(e.projectileSprite),e.targetSprite.destroy(),e.projectileSprite.destroy(),(i=e.blockRevealTargetSprite)!=null&&i.parent&&(e.blockRevealTargetSprite.parent.removeChild(e.blockRevealTargetSprite),e.blockRevealTargetSprite.destroy()),(r=e.blockRevealProjectileSprite)!=null&&r.parent&&(e.blockRevealProjectileSprite.parent.removeChild(e.blockRevealProjectileSprite),e.blockRevealProjectileSprite.destroy())}),this.events.clear(),this.overlayContainer.parent&&this.overlayContainer.parent.removeChild(this.overlayContainer),this.overlayContainer.destroy(),(t=this.blockRevealOverlayContainer)!=null&&t.parent&&(this.blockRevealOverlayContainer.parent.removeChild(this.blockRevealOverlayContainer),this.blockRevealOverlayContainer.destroy())}}class ne extends z{constructor(e){super(e);a(this,"gameContainer");a(this,"inputHandler");a(this,"backgroundSprite1");a(this,"backgroundSprite2");a(this,"backgroundLoaded",!1);a(this,"player");a(this,"enemies",[]);a(this,"boss",null);a(this,"bullets",[]);a(this,"playerBullets",[]);a(this,"stageSystem");a(this,"enemySpawner");a(this,"collisionSystem");a(this,"scoreSystem");a(this,"grazeSystem");a(this,"blockRevealEventManager");a(this,"gameAreaWidth");a(this,"gameAreaHeight");a(this,"lastScoreThreshold",0);this.gameAreaWidth=e.gameAreaWidth||s.GAME.AREA_WIDTH,this.gameAreaHeight=e.gameAreaHeight||s.GAME.AREA_HEIGHT}async setupGameSpecific(){await this.loadBackgroundAssets(),this.setupGameArea(),await this.loadEnemyAssets(),this.initPlayer(),this.setupInputHandler(),console.log("ShootingGameController: Game setup complete"),this.app.ticker.add(e=>this.update(e.deltaTime),this)}async loadBackgroundAssets(){try{await B.load(s.BACKGROUND.IMAGE_PATH),Y.getInstance().registerAssetManagedTexture(s.BACKGROUND.IMAGE_PATH),this.backgroundLoaded=!0,console.log("Background texture loaded successfully")}catch(e){console.error("Failed to load background texture:",e),this.backgroundLoaded=!1}}setupGameArea(){this.gameContainer=new _,this.gameContainer.zIndex=1e3,this.app.stage.addChild(this.gameContainer);const e=U.from(s.BACKGROUND.IMAGE_PATH);this.backgroundSprite1=new H(e),this.backgroundSprite1.width=this.gameAreaWidth,this.backgroundSprite1.height=this.gameAreaHeight,this.backgroundSprite1.x=0,this.backgroundSprite1.y=0,this.gameContainer.addChild(this.backgroundSprite1),this.backgroundSprite2=new H(e),this.backgroundSprite2.width=this.gameAreaWidth,this.backgroundSprite2.height=this.gameAreaHeight,this.backgroundSprite2.x=0,this.backgroundSprite2.y=-this.gameAreaHeight,this.gameContainer.addChild(this.backgroundSprite2);const i=new g;i.rect(0,0,this.gameAreaWidth,this.gameAreaHeight).fill(16777215),this.gameContainer.mask=i,this.gameContainer.addChild(i)}async loadEnemyAssets(){try{await B.load(s.ENEMY.IMAGES.TYPE1.PATH),await B.load(s.ENEMY.IMAGES.TYPE2.PATH),Y.getInstance().registerAssetManagedTexture(s.ENEMY.IMAGES.TYPE1.PATH),Y.getInstance().registerAssetManagedTexture(s.ENEMY.IMAGES.TYPE2.PATH),console.log("Enemy textures loaded successfully")}catch(e){console.error("Failed to load enemy textures:",e)}}initPlayer(){this.player=new $({x:this.gameAreaWidth/2,y:this.gameAreaHeight-s.PLAYER.DEFAULT_Y_OFFSET,speed:s.PLAYER.SPEED,slowSpeed:s.PLAYER.SLOW_SPEED,hitboxRadius:s.PLAYER.HITBOX_RADIUS,fireRate:s.PLAYER.FIRE_RATE,maxHp:s.PLAYER.MAX_HP}),this.gameContainer.addChild(this.player.getSprite())}initSystems(){this.scoreSystem=new ae;const e=this.options;this.stageSystem=new ee(e.stageCount||s.STAGE.DEFAULT_MAX_STAGES),this.enemySpawner=new ie(this.gameAreaWidth,this.gameAreaHeight),this.collisionSystem=new se(this.player,()=>this.enemies,()=>this.bullets,()=>this.playerBullets,this.gameAreaWidth,this.gameAreaHeight),this.grazeSystem=new re,this.blockRevealEventManager=new oe(this.gameContainer,this.blockReveal,this.gameAreaWidth,this.gameAreaHeight,this.getBlockRevealApp())}setupInputHandler(){const e=this.options;this.inputHandler=new Q(this,e.inputOptions)}update(e){!this.stageSystem||!this.scoreSystem||!this.collisionSystem||(this.updateScroll(e),this.updateEntities(e),this.inputHandler.updateMovement(e),this.spawnEnemies(e),this.checkCollisions(),this.checkScoreThreshold(),this.cleanupEntities())}updateScroll(e){const i=s.BACKGROUND.SCROLL_SPEED*e;this.backgroundSprite1.y+=i,this.backgroundSprite2.y+=i,this.backgroundSprite1.y>=this.gameAreaHeight&&(this.backgroundSprite1.y=this.backgroundSprite2.y-this.gameAreaHeight),this.backgroundSprite2.y>=this.gameAreaHeight&&(this.backgroundSprite2.y=this.backgroundSprite1.y-this.gameAreaHeight)}updateEntities(e){this.player.update(e,I.targetFPMS),this.inputHandler.isAutoFireEnabled()&&this.player.tryAutoShoot().forEach(r=>{this.playerBullets.push(r),this.gameContainer.addChild(r.getSprite())}),this.enemies.forEach(i=>{i.update(e,I.targetFPMS),i.shouldFire()&&i.getFirePattern()&&i.createBullets(i.getFirePattern()).forEach(n=>{this.bullets.push(n),this.gameContainer.addChild(n.getSprite())})}),this.boss&&this.boss.update(e),this.bullets.forEach(i=>i.update(e,I.targetFPMS)),this.playerBullets.forEach(i=>i.update(e,I.targetFPMS))}spawnEnemies(e){!this.boss&&this.stageSystem.isActive()&&this.enemySpawner.update(e,this.stageSystem.getCurrentStage(),I.targetFPMS).forEach(r=>{this.enemies.push(r),this.gameContainer.addChild(r.getSprite())})}checkCollisions(){const e=this.collisionSystem.check();e.playerHit&&this.player.takeDamage(),e.destroyedEnemies.forEach(r=>{this.scoreSystem.addScore(r.getScore()),this.triggerBlockReveal(r.getX(),r.getY(),M.SMALL)}),e.hitBullets.forEach(r=>{this.gameContainer.removeChild(r.getSprite())}),this.bullets=this.bullets.filter(r=>!e.hitBullets.includes(r)),e.hitPlayerBullets.forEach(r=>{this.gameContainer.removeChild(r.getSprite())}),this.playerBullets=this.playerBullets.filter(r=>!e.hitPlayerBullets.includes(r));const i=this.grazeSystem.checkGraze(this.player,this.bullets);i.count>0&&(this.scoreSystem.addScore(i.count*s.GRAZE.SCORE_PER_BULLET),this.triggerBlockReveal(this.player.getX(),this.player.getY(),M.SMALL),i.events.forEach(r=>{this.grazeSystem.createGrazeEffect(this.gameContainer,r.x,r.y)}))}checkScoreThreshold(){const e=this.scoreSystem.getScore(),i=Math.floor(e/s.SCORE.BLOCK_REVEAL_THRESHOLD)*s.SCORE.BLOCK_REVEAL_THRESHOLD;i>this.lastScoreThreshold&&i>0&&(this.lastScoreThreshold=i,this.triggerBlockReveal(this.gameAreaWidth/2,this.gameAreaHeight/2,M.MEDIUM))}cleanupEntities(){this.enemies=this.enemies.filter(e=>!e.isAlive()||e.isOutOfBounds(this.gameAreaWidth,this.gameAreaHeight)?(this.gameContainer.removeChild(e.getSprite()),!1):!0),this.bullets=this.bullets.filter(e=>e.isOutOfBounds(this.gameAreaWidth,this.gameAreaHeight)?(this.gameContainer.removeChild(e.getSprite()),!1):!0),this.playerBullets=this.playerBullets.filter(e=>e.isOutOfBounds(this.gameAreaWidth,this.gameAreaHeight)?(this.gameContainer.removeChild(e.getSprite()),!1):!0)}triggerBlockReveal(e,i,r){this.blockRevealEventManager.triggerReveal(e,i,r)}movePlayer(e,i,r){this.player.move(e,i,r,I.targetFPMS),this.player.clampPosition(0,0,this.gameAreaWidth,this.gameAreaHeight)}setPlayerSlowMode(e){this.player.setSlowMode(e)}playerShoot(){this.player.shoot().forEach(i=>{this.playerBullets.push(i),this.gameContainer.addChild(i.getSprite())})}getGameContainer(){return this.gameContainer}getCanvas(){return this.app.canvas}movePlayerToPosition(e,i,r){const n=e*this.gameAreaWidth,o=i*this.gameAreaHeight,h=this.player.getX(),d=this.player.getY(),c=n-h,E=o-d,u=Math.sqrt(c*c+E*E);if(u>1){const p=Math.min(u*.1,1),A=c/u*p,T=E/u*p;this.player.move(A,T,r,I.targetFPMS),this.player.clampPosition(0,0,this.gameAreaWidth,this.gameAreaHeight)}}onImagesLoaded(){console.log("Shooting game images loaded"),this.initSystems(),this.inputHandler&&this.inputHandler.enable(),console.log("ShootingGameController: Images loaded, resize will be handled by setup completion")}setupAdditionalEventListeners(){}handleGameSpecificKeyDown(e){this.inputHandler.handleKeyDown(e)}onReset(){this.enemies.forEach(e=>this.gameContainer.removeChild(e.getSprite())),this.bullets.forEach(e=>this.gameContainer.removeChild(e.getSprite())),this.playerBullets.forEach(e=>this.gameContainer.removeChild(e.getSprite())),this.enemies=[],this.bullets=[],this.playerBullets=[],this.boss=null,this.player.reset(),this.scoreSystem.reset(),this.stageSystem.reset(),this.lastScoreThreshold=0}destroyGameSpecific(){this.app.ticker.remove(e=>this.update(e.deltaTime),this),this.inputHandler.destroy(),this.blockRevealEventManager.destroy()}resize(){if(super.resize(),!this.gameContainer){console.warn("ShootingGameController: resize() called but gameContainer not initialized yet");return}if(!this.backgroundLoaded){console.warn("ShootingGameController: resize() called but background resources not loaded yet");return}console.log("ShootingGameController: Performing resize");const e=this.containerElement,i=e.clientWidth,r=e.clientHeight,n=s.GAME.AREA_RATIO,o=i*n,h=r,d=o/this.gameAreaWidth,c=h/this.gameAreaHeight,E=Math.min(d,c);this.gameContainer.scale.set(E);const u=this.gameAreaWidth*E,p=this.gameAreaHeight*E;this.gameContainer.x=(i-u)/2,this.gameContainer.y=(r-p)/2}}class G{static isTouchDevice(){return"ontouchstart"in window||navigator.maxTouchPoints>0||window.matchMedia&&window.matchMedia("(pointer: coarse)").matches}static isMobile(){const t=navigator.userAgent.toLowerCase(),i=["android","webos","iphone","ipad","ipod","blackberry","windows phone","mobile"].some(n=>t.includes(n)),r=window.innerWidth<=768;return this.isTouchDevice()&&(i||r)}static isTablet(){const t=navigator.userAgent.toLowerCase(),e=t.includes("ipad"),i=t.includes("android")&&!t.includes("mobile"),r=window.innerWidth>768&&window.innerWidth<=1024;return this.isTouchDevice()&&(e||i||r)}static getOrientation(){return window.screen&&window.screen.orientation?window.screen.orientation.type.includes("landscape")?"landscape":"portrait":window.innerWidth>window.innerHeight?"landscape":"portrait"}static getDeviceType(){return this.isMobile()?"mobile":this.isTablet()?"tablet":"desktop"}}let b;async function he(){const l=G.isMobile(),t=G.isTablet(),e=G.isTouchDevice(),i={enableKeyboard:!0,enableMouse:!1,enableTouch:e,enableGamepad:!0,autoFire:!0,mouseControlType:"relative",touchControlType:"virtual-stick"};b=new ne({containerId:"shooting-game-area",blockRevealContainerId:"block-reveal-area",backgroundImage:"./assets/images/background.png",foregroundImage:"./assets/images/foreground.png",blockSize:8,gravity:1e3,explosionForce:300,fadeOutDuration:500,stageCount:3,playerLives:3,continueCount:3,inputOptions:i});const r=()=>{var c,E,u;const o=((c=b.scoreSystem)==null?void 0:c.getScore())||0,h=((E=b.scoreSystem)==null?void 0:E.getHighScore())||0,d=((u=b.stageSystem)==null?void 0:u.getCurrentStage())||1;document.getElementById("score").textContent=o.toString(),document.getElementById("high-score").textContent=h.toString(),document.getElementById("stage").textContent=d.toString(),requestAnimationFrame(r)};r();const n=document.querySelector(".controls .info");n&&(l||t?n.textContent="Touch & Drag: Move | Auto Fire Enabled":e&&(n.textContent="Touch/Mouse: Move | Click: Shoot | Keys: WASD/Arrows"))}document.getElementById("reset-button").addEventListener("click",()=>{b&&b.reset()});window.addEventListener("load",he);
