var H=Object.defineProperty;var O=(o,t,e)=>t in o?H(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var a=(o,t,e)=>O(o,typeof t!="symbol"?t+"":t,e);import{B as N,C as P,c as _,S as f,a as b,A as y,T as S}from"./BaseInputHandler.js";import{G as A}from"./Graphics.js";var p=(o=>(o.SMALL="small",o.MEDIUM="medium",o.LARGE="large",o))(p||{}),g=(o=>(o.TYPE1="type1",o.TYPE2="type2",o))(g||{}),L=(o=>(o[o.SMALL=9]="SMALL",o[o.MEDIUM=18]="MEDIUM",o[o.LARGE=600]="LARGE",o))(L||{});class i{}a(i,"GAME",{AREA_WIDTH:480,AREA_HEIGHT:640,BACKGROUND_COLOR:4386,AREA_RATIO:1}),a(i,"BACKGROUND",{IMAGE_PATH:"./assets/images/shooting/bg_1.png",SCROLL_SPEED:.1}),a(i,"PLAYER",{DEFAULT_Y_OFFSET:100,MOVEMENT_MARGIN:20,HITBOX_RADIUS:4,SPEED:.35,SLOW_SPEED:.15,DIAGONAL_MULTIPLIER:.707,FIRE_RATE:250,MAX_HP:5,DEFAULT_LIVES:3,INVULNERABILITY_DURATION:1e3,INVULNERABILITY_BLINK_RATE:.02,SHIP_COORDS:{TOP_X:0,TOP_Y:-15,LEFT_X:-10,LEFT_Y:10,BOTTOM_CENTER_X:0,BOTTOM_CENTER_Y:5,RIGHT_X:10,RIGHT_Y:10},HP_BAR:{WIDTH:100,HEIGHT:8,OFFSET_X:-50,OFFSET_Y:-40,COLORS:{HIGH:65280,MEDIUM:16776960,LOW:16711680}},BULLET:{OFFSET_Y:-20,VELOCITY_X:0,VELOCITY_Y:-.45,DAMAGE:1,COLOR:65280,RADIUS:1.33}}),a(i,"ENEMY",{IMAGES:{TYPE1:{PATH:"./assets/images/shooting/enemy_1.png",ORIGINAL_WIDTH:96,ORIGINAL_HEIGHT:128},TYPE2:{PATH:"./assets/images/shooting/enemy_2.png",ORIGINAL_WIDTH:128,ORIGINAL_HEIGHT:96}},TYPES:{SMALL:{WIDTH:28,HEIGHT:38,HP:3,SCORE:100},MEDIUM:{WIDTH:42,HEIGHT:56,HP:3,SCORE:300},LARGE:{WIDTH:56,HEIGHT:74,HP:3,SCORE:500}},TYPE2_SIZES:{SMALL:{WIDTH:38,HEIGHT:28,HP:2,SCORE:150},MEDIUM:{WIDTH:56,HEIGHT:42,HP:5,SCORE:400},LARGE:{WIDTH:74,HEIGHT:56,HP:8,SCORE:600}},COLORS:{SMALL:16737894,MEDIUM:16724787,LARGE:16711680},HEALTH_BAR:{STROKE_WIDTH:2,COLOR:16777215,RADIUS_OFFSET:5},MOVEMENT:{TIME_MULTIPLIER:.001,DEFAULT_AMPLITUDE:50,SPEED_MIN:.05,SPEED_RANDOM:.03,SINE_AMPLITUDE_MIN:50,SINE_AMPLITUDE_RANDOM:50,SINE_FREQUENCY_MIN:1,SINE_FREQUENCY_RANDOM:1},FIRING:{INTERVAL:800,BULLET_SPEED:.2,BULLET_DAMAGE:1,SPREAD_ANGLE:30,SPREAD_COUNT:3,CIRCULAR_COUNT:8},BOUNDS_MARGIN:100}),a(i,"SPAWNING",{DEFAULT_INTERVAL:2e3,INTERVAL_REDUCTION_PER_STAGE:100,MIN_INTERVAL:1e3,MAX_COUNT_PER_WAVE:3,SPAWN_Y_OFFSET:-50,SPAWN_MARGIN:50}),a(i,"BOSS",{VISUAL_SIZE:{WIDTH:80,HEIGHT:60},COLOR:16711935,POSITION_OFFSET:{X:-40,Y:-30}}),a(i,"BULLET",{DEFAULT_RADIUS:4,DEFAULT_COLOR:16711680,BOUNDS_MARGIN:50}),a(i,"GRAZE",{RADIUS:30,SCORE_PER_BULLET:10,PARTICLE:{COUNT:8,RADIUS:2,COLOR:16776960,SPEED_MIN:50,SPEED_MAX:80,LIFETIME:.5,TARGET_FPS:60}}),a(i,"SCORE",{COMBO_MULTIPLIER:.1,BLOCK_REVEAL_THRESHOLD:1e4}),a(i,"STAGE",{DEFAULT_MAX_STAGES:3,STARTING_STAGE:1}),a(i,"INPUT",{MOVE_SPEED:1,SHOOT_COOLDOWN:100,DEFAULT_OPTIONS:{ENABLE_KEYBOARD:!0,ENABLE_MOUSE:!1,ENABLE_TOUCH:!1,ENABLE_GAMEPAD:!0,AUTO_FIRE:!0,MOUSE_CONTROL_TYPE:"relative",TOUCH_CONTROL_TYPE:"follow"},GAMEPAD:{DEADZONE:.15},MOUSE:{FOLLOW_SPEED:.1},TOUCH:{VIRTUAL_STICK_RADIUS:80}}),a(i,"BLOCK_REVEAL",{FORCE_MULTIPLIER:.1,DURATION:1e3}),a(i,"DIFFICULTY",{EASY:{PLAYER_SPEED_MULTIPLIER:1.2,ENEMY_SPEED_MULTIPLIER:.8,SPAWN_INTERVAL_MULTIPLIER:1.5},NORMAL:{PLAYER_SPEED_MULTIPLIER:1,ENEMY_SPEED_MULTIPLIER:1,SPAWN_INTERVAL_MULTIPLIER:1},HARD:{PLAYER_SPEED_MULTIPLIER:.9,ENEMY_SPEED_MULTIPLIER:1.3,SPAWN_INTERVAL_MULTIPLIER:.7}});class C{constructor(){a(this,"keys",new Set);a(this,"enabled",!1);a(this,"handleKeyDown",t=>{this.enabled&&this.keys.add(t.key)});a(this,"handleKeyUp",t=>{this.keys.delete(t.key)})}enable(){this.enabled=!0,window.addEventListener("keydown",this.handleKeyDown),window.addEventListener("keyup",this.handleKeyUp)}disable(){this.enabled=!1,window.removeEventListener("keydown",this.handleKeyDown),window.removeEventListener("keyup",this.handleKeyUp),this.keys.clear()}getInputState(){let t=0,e=0;if((this.keys.has("ArrowLeft")||this.keys.has("a")||this.keys.has("A"))&&(t-=1),(this.keys.has("ArrowRight")||this.keys.has("d")||this.keys.has("D"))&&(t+=1),(this.keys.has("ArrowUp")||this.keys.has("w")||this.keys.has("W"))&&(e-=1),(this.keys.has("ArrowDown")||this.keys.has("s")||this.keys.has("S"))&&(e+=1),t!==0&&e!==0){const s=Math.sqrt(t*t+e*e);t/=s,e/=s}return{movement:{x:t,y:e},shooting:this.keys.has(" ")||this.keys.has("Space"),slowMode:this.keys.has("Shift"),pause:this.keys.has("Escape")}}update(t){}destroy(){this.disable()}}class D{constructor(t,e="relative"){a(this,"enabled",!1);a(this,"mousePosition",{x:0,y:0});a(this,"leftButtonDown",!1);a(this,"rightButtonDown",!1);a(this,"container");a(this,"controlType");a(this,"handleMouseMove",t=>{if(!this.enabled)return;const e=this.container.getBoundingClientRect();this.mousePosition={x:(t.clientX-e.left)/e.width,y:(t.clientY-e.top)/e.height}});a(this,"handleMouseDown",t=>{this.enabled&&(t.button===0&&(this.leftButtonDown=!0),t.button===2&&(this.rightButtonDown=!0))});a(this,"handleMouseUp",t=>{t.button===0&&(this.leftButtonDown=!1),t.button===2&&(this.rightButtonDown=!1)});a(this,"handleContextMenu",t=>{t.preventDefault()});this.container=t,this.controlType=e}enable(){this.enabled=!0,this.container.addEventListener("mousemove",this.handleMouseMove),this.container.addEventListener("mousedown",this.handleMouseDown),this.container.addEventListener("mouseup",this.handleMouseUp),this.container.addEventListener("contextmenu",this.handleContextMenu),document.addEventListener("mouseup",this.handleMouseUp)}disable(){this.enabled=!1,this.container.removeEventListener("mousemove",this.handleMouseMove),this.container.removeEventListener("mousedown",this.handleMouseDown),this.container.removeEventListener("mouseup",this.handleMouseUp),this.container.removeEventListener("contextmenu",this.handleContextMenu),document.removeEventListener("mouseup",this.handleMouseUp),this.leftButtonDown=!1,this.rightButtonDown=!1}getInputState(){const t={movement:{x:0,y:0},shooting:this.leftButtonDown,slowMode:this.rightButtonDown};if(this.controlType==="absolute")t.position={...this.mousePosition};else{t.movement={x:(this.mousePosition.x-.5)*2,y:(this.mousePosition.y-.5)*2};const e=Math.sqrt(t.movement.x**2+t.movement.y**2);e>1&&(t.movement.x/=e,t.movement.y/=e)}return t}update(t){}destroy(){this.disable()}}class B{constructor(t,e="follow"){a(this,"enabled",!1);a(this,"container");a(this,"controlType");a(this,"touchId",null);a(this,"touchPosition",{x:.5,y:.5});a(this,"isTouching",!1);a(this,"isMultiTouch",!1);a(this,"stickOrigin",null);a(this,"stickRadius",i.INPUT.TOUCH.VIRTUAL_STICK_RADIUS);a(this,"handleTouchStart",t=>{if(this.enabled){if(t.preventDefault(),t.touches.length>0&&this.touchId===null){const e=t.touches[0];this.touchId=e.identifier;const s=this.container.getBoundingClientRect();this.touchPosition={x:(e.clientX-s.left)/s.width,y:(e.clientY-s.top)/s.height},this.controlType==="virtual-stick"&&(this.stickOrigin={x:e.clientX-s.left,y:e.clientY-s.top}),this.isTouching=!0}t.touches.length>=2&&(this.isMultiTouch=!0)}});a(this,"handleTouchMove",t=>{if(!(!this.enabled||this.touchId===null)){t.preventDefault();for(let e=0;e<t.touches.length;e++){const s=t.touches[e];if(s.identifier===this.touchId){const r=this.container.getBoundingClientRect();if(this.controlType==="follow")this.touchPosition={x:(s.clientX-r.left)/r.width,y:(s.clientY-r.top)/r.height};else if(this.controlType==="virtual-stick"&&this.stickOrigin){const h=s.clientX-r.left,n=s.clientY-r.top,l=h-this.stickOrigin.x,c=n-this.stickOrigin.y,E=Math.sqrt(l*l+c*c),d=Math.min(E,this.stickRadius);E>0&&(this.touchPosition={x:.5+l/E*(d/this.stickRadius)*.5,y:.5+c/E*(d/this.stickRadius)*.5})}break}}}});a(this,"handleTouchEnd",t=>{if(!this.enabled)return;t.preventDefault();let e=!1;for(let s=0;s<t.touches.length;s++)if(t.touches[s].identifier===this.touchId){e=!0;break}e||(this.touchId=null,this.isTouching=!1,this.stickOrigin=null,this.touchPosition={x:.5,y:.5}),t.touches.length<2&&(this.isMultiTouch=!1)});this.container=t,this.controlType=e}enable(){this.enabled=!0,this.container.addEventListener("touchstart",this.handleTouchStart,{passive:!1}),this.container.addEventListener("touchmove",this.handleTouchMove,{passive:!1}),this.container.addEventListener("touchend",this.handleTouchEnd,{passive:!1}),this.container.addEventListener("touchcancel",this.handleTouchEnd,{passive:!1})}disable(){this.enabled=!1,this.container.removeEventListener("touchstart",this.handleTouchStart),this.container.removeEventListener("touchmove",this.handleTouchMove),this.container.removeEventListener("touchend",this.handleTouchEnd),this.container.removeEventListener("touchcancel",this.handleTouchEnd),this.reset()}reset(){this.touchId=null,this.isTouching=!1,this.isMultiTouch=!1,this.stickOrigin=null,this.touchPosition={x:.5,y:.5}}getInputState(){const t={movement:{x:0,y:0},shooting:this.isTouching&&!this.isMultiTouch,slowMode:this.isMultiTouch};return this.controlType==="follow"&&this.isTouching?t.position={...this.touchPosition}:this.controlType==="virtual-stick"&&this.isTouching&&(t.movement={x:(this.touchPosition.x-.5)*2,y:(this.touchPosition.y-.5)*2}),t}update(t){}destroy(){this.disable()}}class v{constructor(t=i.INPUT.GAMEPAD.DEADZONE){a(this,"enabled",!1);a(this,"deadzone",i.INPUT.GAMEPAD.DEADZONE);a(this,"gamepadIndex",null);a(this,"handleGamepadConnected",t=>{this.gamepadIndex===null&&(this.gamepadIndex=t.gamepad.index,console.log(`Gamepad connected: ${t.gamepad.id}`))});a(this,"handleGamepadDisconnected",t=>{this.gamepadIndex===t.gamepad.index&&(this.gamepadIndex=null,console.log(`Gamepad disconnected: ${t.gamepad.id}`))});this.deadzone=t}enable(){this.enabled=!0,window.addEventListener("gamepadconnected",this.handleGamepadConnected),window.addEventListener("gamepaddisconnected",this.handleGamepadDisconnected);const t=navigator.getGamepads();for(let e=0;e<t.length;e++){const s=t[e];if(s){this.gamepadIndex=e,console.log(`Gamepad already connected: ${s.id}`);break}}}disable(){this.enabled=!1,window.removeEventListener("gamepadconnected",this.handleGamepadConnected),window.removeEventListener("gamepaddisconnected",this.handleGamepadDisconnected),this.gamepadIndex=null}applyDeadzone(t){return Math.abs(t)>this.deadzone?t:0}getInputState(){var l,c,E,d,u,m,I,M;const t={movement:{x:0,y:0},shooting:!1,slowMode:!1,pause:!1};if(!this.enabled||this.gamepadIndex===null)return t;const s=navigator.getGamepads()[this.gamepadIndex];if(!s)return t;let r=this.applyDeadzone(s.axes[0]),h=this.applyDeadzone(s.axes[1]);(l=s.buttons[14])!=null&&l.pressed&&(r-=1),(c=s.buttons[15])!=null&&c.pressed&&(r+=1),(E=s.buttons[12])!=null&&E.pressed&&(h-=1),(d=s.buttons[13])!=null&&d.pressed&&(h+=1);const n=Math.sqrt(r*r+h*h);return n>1&&(r/=n,h/=n),t.movement={x:r,y:h},t.shooting=((u=s.buttons[0])==null?void 0:u.pressed)||!1,t.slowMode=((m=s.buttons[6])==null?void 0:m.pressed)||((I=s.buttons[7])==null?void 0:I.pressed)||!1,t.pause=((M=s.buttons[9])==null?void 0:M.pressed)||!1,t}update(t){}destroy(){this.disable()}}class Y extends N{constructor(e,s){super({container:e.getApp().stage,onInput:()=>{}});a(this,"controller");a(this,"moveSpeed",i.INPUT.MOVE_SPEED);a(this,"inputHandlers",[]);a(this,"keyboardHandler");a(this,"mouseHandler");a(this,"touchHandler");a(this,"gamepadHandler");a(this,"options");a(this,"autoFire");a(this,"lastShootTime",0);a(this,"shootCooldown",i.INPUT.SHOOT_COOLDOWN);this.controller=e,this.options={enableKeyboard:!0,enableMouse:!1,enableTouch:!1,enableGamepad:!0,autoFire:!0,mouseControlType:"relative",touchControlType:"follow",...s},this.autoFire=this.options.autoFire??!0,this.initializeInputHandlers()}initializeInputHandlers(){const e=this.controller.getApp().canvas;this.options.enableKeyboard&&(this.keyboardHandler=new C,this.inputHandlers.push(this.keyboardHandler)),this.options.enableMouse&&(this.mouseHandler=new D(e,this.options.mouseControlType),this.inputHandlers.push(this.mouseHandler)),this.options.enableTouch&&(this.touchHandler=new B(e,this.options.touchControlType),this.inputHandlers.push(this.touchHandler)),this.options.enableGamepad&&(this.gamepadHandler=new v,this.inputHandlers.push(this.gamepadHandler))}setupEventListeners(){}onEnable(){this.inputHandlers.forEach(e=>e.enable())}onDisable(){this.inputHandlers.forEach(e=>e.disable())}handleKeyDown(e){this.isEnabled}getCombinedInputState(){const e={movement:{x:0,y:0},shooting:!1,slowMode:!1,pause:!1};for(const s of this.inputHandlers){const r=s.getInputState();Math.abs(r.movement.x)>Math.abs(e.movement.x)&&(e.movement.x=r.movement.x),Math.abs(r.movement.y)>Math.abs(e.movement.y)&&(e.movement.y=r.movement.y),r.position&&(e.position=r.position),e.shooting=e.shooting||r.shooting,e.slowMode=e.slowMode||r.slowMode,r.pause!==void 0&&(e.pause=e.pause||r.pause)}return e}updateMovement(e){if(!this.isEnabled)return;const s=this.getCombinedInputState(),r=Date.now();if(this.controller.setPlayerSlowMode(s.slowMode),s.position)this.controller.movePlayerToPosition(s.position.x,s.position.y,e);else if(s.movement.x!==0||s.movement.y!==0){let h=s.movement.x*this.moveSpeed,n=s.movement.y*this.moveSpeed;this.controller.movePlayer(h,n,e)}(this.autoFire||s.shooting)&&!this.autoFire&&r-this.lastShootTime>=this.shootCooldown&&(this.controller.playerShoot(),this.lastShootTime=r),s.pause}setAutoFire(e){this.autoFire=e}isAutoFireEnabled(){return this.autoFire}destroy(){this.disable(),this.inputHandlers.forEach(e=>e.destroy()),this.inputHandlers=[]}}class R{constructor(t){a(this,"sprite");a(this,"vx");a(this,"vy");a(this,"damage");a(this,"isPlayerBullet");a(this,"radius");this.vx=t.vx,this.vy=t.vy,this.damage=t.damage,this.isPlayerBullet=t.isPlayerBullet,this.radius=t.radius||i.BULLET.DEFAULT_RADIUS,this.sprite=new A,this.sprite.circle(0,0,this.radius).fill(t.color||i.BULLET.DEFAULT_COLOR),this.sprite.x=t.x,this.sprite.y=t.y}update(t,e){const s=t/e;this.sprite.x+=this.vx*s,this.sprite.y+=this.vy*s}isOutOfBounds(t,e){const s=i.BULLET.BOUNDS_MARGIN;return this.sprite.x<-s||this.sprite.x>t+s||this.sprite.y<-s||this.sprite.y>e+s}getSprite(){return this.sprite}getX(){return this.sprite.x}getY(){return this.sprite.y}getRadius(){return this.radius}getDamage(){return this.damage}getIsPlayerBullet(){return this.isPlayerBullet}}class G{constructor(t){a(this,"sprite");a(this,"shipSprite");a(this,"hitboxSprite");a(this,"hpBarContainer");a(this,"hpBarBg");a(this,"hpBarFill");a(this,"config");a(this,"slowMode",!1);a(this,"lastFireTime",0);a(this,"gameTime",0);a(this,"lives",i.PLAYER.DEFAULT_LIVES);a(this,"currentHp");a(this,"maxHp");a(this,"invulnerable",!1);a(this,"invulnerableTime",0);this.config=t,this.maxHp=t.maxHp,this.currentHp=this.maxHp,this.sprite=new P,this.shipSprite=new A,this.drawShip(),this.sprite.addChild(this.shipSprite),this.hitboxSprite=new A,this.drawHitbox(),this.hitboxSprite.visible=!1,this.sprite.addChild(this.hitboxSprite),this.hpBarContainer=new P,this.hpBarBg=new A,this.hpBarFill=new A,this.setupHpBar(),this.sprite.x=t.x,this.sprite.y=t.y}drawShip(){this.shipSprite.clear(),this.shipSprite.moveTo(i.PLAYER.SHIP_COORDS.TOP_X,i.PLAYER.SHIP_COORDS.TOP_Y),this.shipSprite.lineTo(i.PLAYER.SHIP_COORDS.LEFT_X,i.PLAYER.SHIP_COORDS.LEFT_Y),this.shipSprite.lineTo(i.PLAYER.SHIP_COORDS.BOTTOM_CENTER_X,i.PLAYER.SHIP_COORDS.BOTTOM_CENTER_Y),this.shipSprite.lineTo(i.PLAYER.SHIP_COORDS.RIGHT_X,i.PLAYER.SHIP_COORDS.RIGHT_Y),this.shipSprite.closePath(),this.shipSprite.fill(65280)}drawHitbox(){this.hitboxSprite.clear(),this.hitboxSprite.circle(0,0,this.config.hitboxRadius).fill({color:16711680,alpha:.5})}setupHpBar(){this.hpBarContainer.x=i.PLAYER.HP_BAR.OFFSET_X,this.hpBarContainer.y=i.PLAYER.HP_BAR.OFFSET_Y,this.hpBarBg.rect(0,0,i.PLAYER.HP_BAR.WIDTH,i.PLAYER.HP_BAR.HEIGHT).fill(3355443),this.hpBarContainer.addChild(this.hpBarBg),this.drawHpBar(),this.hpBarContainer.addChild(this.hpBarFill),this.sprite.addChild(this.hpBarContainer)}drawHpBar(){this.hpBarFill.clear();const t=this.currentHp/this.maxHp,e=i.PLAYER.HP_BAR.WIDTH*t;let s=i.PLAYER.HP_BAR.COLORS.HIGH;t<=.5&&(s=i.PLAYER.HP_BAR.COLORS.MEDIUM),t<=.25&&(s=i.PLAYER.HP_BAR.COLORS.LOW),this.hpBarFill.rect(0,0,e,i.PLAYER.HP_BAR.HEIGHT).fill(s)}update(t,e){const s=t/e;this.gameTime+=s,this.invulnerable&&(this.invulnerableTime-=s,this.invulnerableTime<=0?(this.invulnerable=!1,this.sprite.alpha=1):this.sprite.alpha=Math.sin(this.invulnerableTime*i.PLAYER.INVULNERABILITY_BLINK_RATE)>0?1:.5)}move(t,e,s,r){const h=this.slowMode?this.config.slowSpeed:this.config.speed,n=s/r;this.sprite.x+=t*h*n,this.sprite.y+=e*h*n}clampPosition(t,e,s,r){this.sprite.x=Math.max(t+i.PLAYER.MOVEMENT_MARGIN,Math.min(s-i.PLAYER.MOVEMENT_MARGIN,this.sprite.x)),this.sprite.y=Math.max(e+i.PLAYER.MOVEMENT_MARGIN,Math.min(r-i.PLAYER.MOVEMENT_MARGIN,this.sprite.y))}setSlowMode(t){this.slowMode=t,this.hitboxSprite.visible=t}canShoot(){return this.gameTime-this.lastFireTime>=this.config.fireRate}shoot(){if(!this.canShoot())return[];this.lastFireTime=this.gameTime;const t=[],e=new R({x:this.sprite.x,y:this.sprite.y+i.PLAYER.BULLET.OFFSET_Y,vx:i.PLAYER.BULLET.VELOCITY_X,vy:i.PLAYER.BULLET.VELOCITY_Y,damage:i.PLAYER.BULLET.DAMAGE,isPlayerBullet:!0,color:i.PLAYER.BULLET.COLOR,radius:i.PLAYER.BULLET.RADIUS});return t.push(e),t}tryAutoShoot(){return this.shoot()}takeDamage(t=1){if(!this.invulnerable){if(this.currentHp-=t,this.drawHpBar(),this.currentHp<=0)if(this.currentHp=0,this.lives--,this.lives>0)this.currentHp=this.maxHp,this.drawHpBar();else{console.log("Game Over");return}this.invulnerable=!0,this.invulnerableTime=i.PLAYER.INVULNERABILITY_DURATION}}reset(){this.sprite.x=this.config.x,this.sprite.y=this.config.y,this.lives=i.PLAYER.DEFAULT_LIVES,this.currentHp=this.maxHp,this.drawHpBar(),this.invulnerable=!1,this.invulnerableTime=0,this.sprite.alpha=1,this.slowMode=!1,this.hitboxSprite.visible=!1,this.gameTime=0,this.lastFireTime=0}getSprite(){return this.sprite}getX(){return this.sprite.x}getY(){return this.sprite.y}getHitboxRadius(){return this.config.hitboxRadius}isInvulnerable(){return this.invulnerable}getCurrentHp(){return this.currentHp}getMaxHp(){return this.maxHp}getLives(){return this.lives}}class w{constructor(t){a(this,"currentStage",1);a(this,"maxStages");a(this,"isStageActive",!0);a(this,"isBossPhase",!1);this.maxStages=t}getCurrentStage(){return this.currentStage}isActive(){return this.isStageActive}isBossActive(){return this.isBossPhase}startBossPhase(){this.isBossPhase=!0}completeBossPhase(){this.isBossPhase=!1,this.nextStage()}nextStage(){this.currentStage<this.maxStages?this.currentStage++:this.isStageActive=!1}reset(){this.currentStage=1,this.isStageActive=!0,this.isBossPhase=!1}}class x{constructor(t,e,s){a(this,"sprite");a(this,"healthBar");a(this,"config");a(this,"hp");a(this,"maxHp");a(this,"time",0);a(this,"lastFireTime",0);a(this,"startX");a(this,"startY");a(this,"baseY");a(this,"shouldFireNow",!1);this.config=t,this.hp=t.hp,this.maxHp=t.hp,this.startX=e,this.startY=s,this.baseY=s,this.createSprite(),this.createHealthBar(),this.sprite.x=e,this.sprite.y=s}createSprite(){const e=(this.config.imageType||g.TYPE1)===g.TYPE1?i.ENEMY.IMAGES.TYPE1.PATH:i.ENEMY.IMAGES.TYPE2.PATH,s=_.from(e);this.sprite=new f(s),this.sprite.anchor.set(.5,.5);const r=this.getDimensionsByType();this.sprite.width=r.width,this.sprite.height=r.height}createHealthBar(){this.healthBar=new A,this.sprite.addChild(this.healthBar),this.updateHealthBar()}updateHealthBar(){if(this.healthBar.clear(),this.hp<this.maxHp){const t=this.getDimensionsByType(),e=Math.max(t.width,t.height)/2+i.ENEMY.HEALTH_BAR.RADIUS_OFFSET;this.healthBar.lineStyle(i.ENEMY.HEALTH_BAR.STROKE_WIDTH,i.ENEMY.HEALTH_BAR.COLOR),this.healthBar.arc(0,0,e,-Math.PI/2,-Math.PI/2+Math.PI*2*this.hp/this.maxHp)}}getDimensionsByType(){const e=(this.config.imageType||g.TYPE1)===g.TYPE1?i.ENEMY.TYPES:i.ENEMY.TYPE2_SIZES;switch(this.config.type){case"small":return{width:e.SMALL.WIDTH,height:e.SMALL.HEIGHT};case"medium":return{width:e.MEDIUM.WIDTH,height:e.MEDIUM.HEIGHT};case"large":return{width:e.LARGE.WIDTH,height:e.LARGE.HEIGHT};default:return{width:e.SMALL.WIDTH,height:e.SMALL.HEIGHT}}}update(t,e){const s=t/e;this.time+=s,this.updateMovement(s),this.shouldFireNow=this.updateFiring()}updateMovement(t){const e=this.config.movement,s=this.time*i.ENEMY.MOVEMENT.TIME_MULTIPLIER;switch(e.type){case"linear":this.sprite.y+=e.speed*t;break;case"sine":this.sprite.x=this.startX+Math.sin(s*(e.frequency||1))*(e.amplitude||i.ENEMY.MOVEMENT.DEFAULT_AMPLITUDE),this.sprite.y+=e.speed*t;break;case"circular":const r=s*(e.frequency||1);this.baseY+=e.speed*t,this.sprite.x=this.startX+Math.cos(r)*(e.amplitude||i.ENEMY.MOVEMENT.DEFAULT_AMPLITUDE),this.sprite.y=this.baseY+Math.sin(r)*(e.amplitude||i.ENEMY.MOVEMENT.DEFAULT_AMPLITUDE);break;case"custom":if(e.customFunction){const h=e.customFunction(s);this.sprite.x=this.startX+h.x,this.sprite.y=this.startY+h.y}break}}updateFiring(){if(!this.config.firePattern)return!1;const t=this.config.firePattern;return this.time-this.lastFireTime>=t.interval?(this.lastFireTime=this.time,!0):!1}shouldFire(){return this.shouldFireNow}createBullets(t){const e=[];switch(t.type){case"single":e.push(new R({x:this.sprite.x,y:this.sprite.y,vx:0,vy:t.bulletSpeed,damage:i.ENEMY.FIRING.BULLET_DAMAGE,isPlayerBullet:!1}));break;case"spread":const s=t.bulletCount||i.ENEMY.FIRING.SPREAD_COUNT,r=t.spreadAngle||i.ENEMY.FIRING.SPREAD_ANGLE;for(let n=0;n<s;n++){const l=r*(n-(s-1)/2)*Math.PI/180;e.push(new R({x:this.sprite.x,y:this.sprite.y,vx:Math.sin(l)*t.bulletSpeed,vy:Math.cos(l)*t.bulletSpeed,damage:i.ENEMY.FIRING.BULLET_DAMAGE,isPlayerBullet:!1}))}break;case"circular":const h=t.bulletCount||i.ENEMY.FIRING.CIRCULAR_COUNT;for(let n=0;n<h;n++){const l=360/h*n*Math.PI/180;e.push(new R({x:this.sprite.x,y:this.sprite.y,vx:Math.cos(l)*t.bulletSpeed,vy:Math.sin(l)*t.bulletSpeed,damage:i.ENEMY.FIRING.BULLET_DAMAGE,isPlayerBullet:!1}))}break}return e}takeDamage(t){this.hp-=t,this.updateHealthBar()}isAlive(){return this.hp>0}isOutOfBounds(t,e){const s=i.ENEMY.BOUNDS_MARGIN;return this.sprite.x<-s||this.sprite.x>t+s||this.sprite.y>e+s}getSprite(){return this.sprite}getX(){return this.sprite.x}getY(){return this.sprite.y}getRadius(){const t=this.getDimensionsByType();return Math.max(t.width,t.height)/2}getScore(){return this.config.score}getFirePattern(){return this.config.firePattern}}class U{constructor(t,e){a(this,"spawnTimer",0);a(this,"spawnInterval",i.SPAWNING.DEFAULT_INTERVAL);a(this,"gameWidth");this.gameWidth=t}update(t,e,s){const r=t/s;this.spawnTimer+=r;const h=[];if(this.spawnTimer>=this.spawnInterval){this.spawnTimer=0;const n=Math.min(e,i.SPAWNING.MAX_COUNT_PER_WAVE);for(let l=0;l<n;l++)h.push(this.createEnemy(e));this.spawnInterval=Math.max(i.SPAWNING.MIN_INTERVAL,i.SPAWNING.DEFAULT_INTERVAL-e*i.SPAWNING.INTERVAL_REDUCTION_PER_STAGE)}return h}createEnemy(t){const e=Math.random()*(this.gameWidth-i.SPAWNING.SPAWN_MARGIN*2)+i.SPAWNING.SPAWN_MARGIN,s=i.SPAWNING.SPAWN_Y_OFFSET,h=[p.SMALL,p.MEDIUM,p.LARGE][Math.min(Math.floor(Math.random()*t),2)],n=Math.random()<.3+t*.1?g.TYPE2:g.TYPE1;let l,c;if(n===g.TYPE1)switch(h){case p.SMALL:l=i.ENEMY.TYPES.SMALL.HP,c=i.ENEMY.TYPES.SMALL.SCORE;break;case p.MEDIUM:l=i.ENEMY.TYPES.MEDIUM.HP,c=i.ENEMY.TYPES.MEDIUM.SCORE;break;case p.LARGE:l=i.ENEMY.TYPES.LARGE.HP,c=i.ENEMY.TYPES.LARGE.SCORE;break}else switch(h){case p.SMALL:l=i.ENEMY.TYPE2_SIZES.SMALL.HP,c=i.ENEMY.TYPE2_SIZES.SMALL.SCORE;break;case p.MEDIUM:l=i.ENEMY.TYPE2_SIZES.MEDIUM.HP,c=i.ENEMY.TYPE2_SIZES.MEDIUM.SCORE;break;case p.LARGE:l=i.ENEMY.TYPE2_SIZES.LARGE.HP,c=i.ENEMY.TYPE2_SIZES.LARGE.SCORE;break}const E=n===g.TYPE2?Math.random()>.3?"circular":"sine":Math.random()>.5?"sine":"linear";let d;return n===g.TYPE2?d={type:Math.random()>.5?"spread":"circular",interval:i.ENEMY.FIRING.INTERVAL*1.2,bulletSpeed:i.ENEMY.FIRING.BULLET_SPEED*.8,bulletCount:h===p.LARGE?5:3,spreadAngle:45}:d={type:"single",interval:i.ENEMY.FIRING.INTERVAL,bulletSpeed:i.ENEMY.FIRING.BULLET_SPEED},new x({type:h,imageType:n,hp:l,score:c,movement:{type:E,speed:i.ENEMY.MOVEMENT.SPEED_MIN+Math.random()*i.ENEMY.MOVEMENT.SPEED_RANDOM,amplitude:E!=="linear"?i.ENEMY.MOVEMENT.SINE_AMPLITUDE_MIN+Math.random()*i.ENEMY.MOVEMENT.SINE_AMPLITUDE_RANDOM:void 0,frequency:E!=="linear"?i.ENEMY.MOVEMENT.SINE_FREQUENCY_MIN+Math.random()*i.ENEMY.MOVEMENT.SINE_FREQUENCY_RANDOM:void 0},firePattern:d},e,s)}reset(){this.spawnTimer=0,this.spawnInterval=i.SPAWNING.DEFAULT_INTERVAL}}class F{constructor(t,e,s,r,h,n){a(this,"player");a(this,"getEnemies");a(this,"getEnemyBullets");a(this,"getPlayerBullets");this.player=t,this.getEnemies=e,this.getEnemyBullets=s,this.getPlayerBullets=r}check(){const t={playerHit:!1,destroyedEnemies:[],hitBullets:[],hitPlayerBullets:[]},e=this.getEnemies(),s=this.getEnemyBullets(),r=this.getPlayerBullets();if(!this.player.isInvulnerable())for(const h of s)this.checkCircleCollision(this.player.getX(),this.player.getY(),this.player.getHitboxRadius(),h.getX(),h.getY(),h.getRadius())&&(t.playerHit=!0,t.hitBullets.push(h));for(const h of r)for(const n of e)if(n.isAlive()&&this.checkCircleCollision(h.getX(),h.getY(),h.getRadius(),n.getX(),n.getY(),n.getRadius())){n.takeDamage(h.getDamage()),t.hitPlayerBullets.push(h),n.isAlive()||t.destroyedEnemies.push(n);break}return t}checkCircleCollision(t,e,s,r,h,n){const l=r-t,c=h-e;return Math.sqrt(l*l+c*c)<s+n}}class k{constructor(){a(this,"score",0);a(this,"highScore",0);a(this,"combo",0);a(this,"maxCombo",0);const t=localStorage.getItem("shootingHighScore");t&&(this.highScore=parseInt(t,10))}addScore(t){this.score+=t*(1+this.combo*i.SCORE.COMBO_MULTIPLIER),this.combo++,this.maxCombo=Math.max(this.maxCombo,this.combo),this.score>this.highScore&&(this.highScore=this.score,localStorage.setItem("shootingHighScore",this.highScore.toString()))}resetCombo(){this.combo=0}getScore(){return Math.floor(this.score)}getHighScore(){return Math.floor(this.highScore)}getCombo(){return this.combo}reset(){this.score=0,this.combo=0,this.maxCombo=0}}class W{constructor(){a(this,"grazeRadius",i.GRAZE.RADIUS);a(this,"grazedBullets",new Set)}checkGraze(t,e){let s=0;const r=[];for(const n of e)if(!n.getIsPlayerBullet()&&!this.grazedBullets.has(n)){const l=this.getDistance(t.getX(),t.getY(),n.getX(),n.getY());l<this.grazeRadius&&l>t.getHitboxRadius()+n.getRadius()&&(this.grazedBullets.add(n),s++,r.push({bullet:n,x:n.getX(),y:n.getY()}))}const h=new Set(e);for(const n of this.grazedBullets)h.has(n)||this.grazedBullets.delete(n);return{count:s,events:r}}createGrazeEffect(t,e,s){const r=i.GRAZE.PARTICLE.COUNT;for(let h=0;h<r;h++){const n=new A;n.circle(0,0,i.GRAZE.PARTICLE.RADIUS).fill(i.GRAZE.PARTICLE.COLOR);const l=h/r*Math.PI*2,c=i.GRAZE.PARTICLE.SPEED_MIN+Math.random()*(i.GRAZE.PARTICLE.SPEED_MAX-i.GRAZE.PARTICLE.SPEED_MIN),E=Math.cos(l)*c,d=Math.sin(l)*c;n.x=e,n.y=s,t.addChild(n);let u=i.GRAZE.PARTICLE.LIFETIME;const m=()=>{if(u-=1/i.GRAZE.PARTICLE.TARGET_FPS,u<=0){t.removeChild(n);return}n.x+=E*(1/i.GRAZE.PARTICLE.TARGET_FPS),n.y+=d*(1/i.GRAZE.PARTICLE.TARGET_FPS),n.alpha=u/i.GRAZE.PARTICLE.LIFETIME,requestAnimationFrame(m)};requestAnimationFrame(m)}}getDistance(t,e,s,r){const h=s-t,n=r-e;return Math.sqrt(h*h+n*n)}reset(){this.grazedBullets.clear()}}class V extends b{constructor(e){super(e);a(this,"gameContainer");a(this,"inputHandler");a(this,"backgroundSprite1");a(this,"backgroundSprite2");a(this,"backgroundLoaded",!1);a(this,"player");a(this,"enemies",[]);a(this,"boss",null);a(this,"bullets",[]);a(this,"playerBullets",[]);a(this,"stageSystem");a(this,"enemySpawner");a(this,"collisionSystem");a(this,"scoreSystem");a(this,"grazeSystem");a(this,"gameAreaWidth");a(this,"gameAreaHeight");a(this,"lastScoreThreshold",0);this.gameAreaWidth=e.gameAreaWidth||i.GAME.AREA_WIDTH,this.gameAreaHeight=e.gameAreaHeight||i.GAME.AREA_HEIGHT}async setupGameSpecific(){await this.loadBackgroundAssets(),this.setupGameArea(),await this.loadEnemyAssets(),this.initPlayer(),this.initSystems(),this.setupInputHandler(),console.log("ShootingGameController: Game setup complete"),this.app.ticker.add(e=>this.update(e.deltaTime),this)}async loadBackgroundAssets(){try{await y.load(i.BACKGROUND.IMAGE_PATH),this.backgroundLoaded=!0,console.log("Background texture loaded successfully")}catch(e){console.error("Failed to load background texture:",e),this.backgroundLoaded=!1}}setupGameArea(){this.gameContainer=new P,this.app.stage.addChild(this.gameContainer);const e=_.from(i.BACKGROUND.IMAGE_PATH);this.backgroundSprite1=new f(e),this.backgroundSprite1.width=this.gameAreaWidth,this.backgroundSprite1.height=this.gameAreaHeight,this.backgroundSprite1.x=0,this.backgroundSprite1.y=0,this.gameContainer.addChild(this.backgroundSprite1),this.backgroundSprite2=new f(e),this.backgroundSprite2.width=this.gameAreaWidth,this.backgroundSprite2.height=this.gameAreaHeight,this.backgroundSprite2.x=0,this.backgroundSprite2.y=-this.gameAreaHeight,this.gameContainer.addChild(this.backgroundSprite2);const s=new A;s.rect(0,0,this.gameAreaWidth,this.gameAreaHeight).fill(16777215),this.gameContainer.mask=s,this.gameContainer.addChild(s)}async loadEnemyAssets(){try{await y.load(i.ENEMY.IMAGES.TYPE1.PATH),await y.load(i.ENEMY.IMAGES.TYPE2.PATH),console.log("Enemy textures loaded successfully")}catch(e){console.error("Failed to load enemy textures:",e)}}initPlayer(){this.player=new G({x:this.gameAreaWidth/2,y:this.gameAreaHeight-i.PLAYER.DEFAULT_Y_OFFSET,speed:i.PLAYER.SPEED,slowSpeed:i.PLAYER.SLOW_SPEED,hitboxRadius:i.PLAYER.HITBOX_RADIUS,fireRate:i.PLAYER.FIRE_RATE,maxHp:i.PLAYER.MAX_HP}),this.gameContainer.addChild(this.player.getSprite())}initSystems(){this.scoreSystem=new k;const e=this.options;this.stageSystem=new w(e.stageCount||i.STAGE.DEFAULT_MAX_STAGES),this.enemySpawner=new U(this.gameAreaWidth,this.gameAreaHeight),this.collisionSystem=new F(this.player,()=>this.enemies,()=>this.bullets,()=>this.playerBullets,this.gameAreaWidth,this.gameAreaHeight),this.grazeSystem=new W}setupInputHandler(){const e=this.options;this.inputHandler=new Y(this,e.inputOptions)}update(e){this.updateScroll(e),this.updateEntities(e),this.inputHandler.updateMovement(e),this.spawnEnemies(e),this.checkCollisions(),this.checkScoreThreshold(),this.cleanupEntities()}updateScroll(e){const s=i.BACKGROUND.SCROLL_SPEED*e;this.backgroundSprite1.y+=s,this.backgroundSprite2.y+=s,this.backgroundSprite1.y>=this.gameAreaHeight&&(this.backgroundSprite1.y=this.backgroundSprite2.y-this.gameAreaHeight),this.backgroundSprite2.y>=this.gameAreaHeight&&(this.backgroundSprite2.y=this.backgroundSprite1.y-this.gameAreaHeight)}updateEntities(e){this.player.update(e,S.targetFPMS),this.inputHandler.isAutoFireEnabled()&&this.player.tryAutoShoot().forEach(r=>{this.playerBullets.push(r),this.gameContainer.addChild(r.getSprite())}),this.enemies.forEach(s=>{s.update(e,S.targetFPMS),s.shouldFire()&&s.getFirePattern()&&s.createBullets(s.getFirePattern()).forEach(h=>{this.bullets.push(h),this.gameContainer.addChild(h.getSprite())})}),this.boss&&this.boss.update(e),this.bullets.forEach(s=>s.update(e,S.targetFPMS)),this.playerBullets.forEach(s=>s.update(e,S.targetFPMS))}spawnEnemies(e){!this.boss&&this.stageSystem.isActive()&&this.enemySpawner.update(e,this.stageSystem.getCurrentStage(),S.targetFPMS).forEach(r=>{this.enemies.push(r),this.gameContainer.addChild(r.getSprite())})}checkCollisions(){const e=this.collisionSystem.check();e.playerHit&&this.player.takeDamage(),e.destroyedEnemies.forEach(r=>{this.scoreSystem.addScore(r.getScore()),this.triggerBlockReveal(r.getX(),r.getY(),L.SMALL)}),e.hitBullets.forEach(r=>{this.gameContainer.removeChild(r.getSprite())}),this.bullets=this.bullets.filter(r=>!e.hitBullets.includes(r)),e.hitPlayerBullets.forEach(r=>{this.gameContainer.removeChild(r.getSprite())}),this.playerBullets=this.playerBullets.filter(r=>!e.hitPlayerBullets.includes(r));const s=this.grazeSystem.checkGraze(this.player,this.bullets);s.count>0&&(this.scoreSystem.addScore(s.count*i.GRAZE.SCORE_PER_BULLET),this.triggerBlockReveal(this.player.getX(),this.player.getY(),L.SMALL),s.events.forEach(r=>{this.grazeSystem.createGrazeEffect(this.gameContainer,r.x,r.y)}))}checkScoreThreshold(){const e=this.scoreSystem.getScore(),s=Math.floor(e/i.SCORE.BLOCK_REVEAL_THRESHOLD)*i.SCORE.BLOCK_REVEAL_THRESHOLD;s>this.lastScoreThreshold&&s>0&&(this.lastScoreThreshold=s,this.triggerBlockReveal(this.gameAreaWidth/2,this.gameAreaHeight/2,L.MEDIUM))}cleanupEntities(){this.enemies=this.enemies.filter(e=>!e.isAlive()||e.isOutOfBounds(this.gameAreaWidth,this.gameAreaHeight)?(this.gameContainer.removeChild(e.getSprite()),!1):!0),this.bullets=this.bullets.filter(e=>e.isOutOfBounds(this.gameAreaWidth,this.gameAreaHeight)?(this.gameContainer.removeChild(e.getSprite()),!1):!0),this.playerBullets=this.playerBullets.filter(e=>e.isOutOfBounds(this.gameAreaWidth,this.gameAreaHeight)?(this.gameContainer.removeChild(e.getSprite()),!1):!0)}triggerBlockReveal(e,s,r){const h=Math.random(),n=Math.random();this.blockReveal.reveal({x:h,y:n,radius:r,force:r*i.BLOCK_REVEAL.FORCE_MULTIPLIER,duration:i.BLOCK_REVEAL.DURATION})}movePlayer(e,s,r){this.player.move(e,s,r,S.targetFPMS),this.player.clampPosition(0,0,this.gameAreaWidth,this.gameAreaHeight)}setPlayerSlowMode(e){this.player.setSlowMode(e)}playerShoot(){this.player.shoot().forEach(s=>{this.playerBullets.push(s),this.gameContainer.addChild(s.getSprite())})}movePlayerToPosition(e,s,r){const h=e*this.gameAreaWidth,n=s*this.gameAreaHeight,l=this.player.getX(),c=this.player.getY(),E=h-l,d=n-c,u=Math.sqrt(E*E+d*d);if(u>1){const m=Math.min(u*.1,1),I=E/u*m,M=d/u*m;this.player.move(I,M,r,S.targetFPMS),this.player.clampPosition(0,0,this.gameAreaWidth,this.gameAreaHeight)}}onImagesLoaded(){console.log("Shooting game images loaded"),this.inputHandler&&this.inputHandler.enable(),console.log("ShootingGameController: Images loaded, resize will be handled by setup completion")}setupAdditionalEventListeners(){}handleGameSpecificKeyDown(e){this.inputHandler.handleKeyDown(e)}onReset(){this.enemies.forEach(e=>this.gameContainer.removeChild(e.getSprite())),this.bullets.forEach(e=>this.gameContainer.removeChild(e.getSprite())),this.playerBullets.forEach(e=>this.gameContainer.removeChild(e.getSprite())),this.enemies=[],this.bullets=[],this.playerBullets=[],this.boss=null,this.player.reset(),this.scoreSystem.reset(),this.stageSystem.reset(),this.lastScoreThreshold=0}destroyGameSpecific(){this.app.ticker.remove(e=>this.update(e.deltaTime),this),this.inputHandler.destroy()}resize(){if(super.resize(),!this.gameContainer){console.warn("ShootingGameController: resize() called but gameContainer not initialized yet");return}if(!this.backgroundLoaded){console.warn("ShootingGameController: resize() called but background resources not loaded yet");return}console.log("ShootingGameController: Performing resize");const e=this.containerElement,s=e.clientWidth,r=e.clientHeight,h=i.GAME.AREA_RATIO,n=s*h,l=r,c=n/this.gameAreaWidth,E=l/this.gameAreaHeight,d=Math.min(c,E);this.gameContainer.scale.set(d);const u=this.gameAreaWidth*d,m=this.gameAreaHeight*d;this.gameContainer.x=(s-u)/2,this.gameContainer.y=(r-m)/2}}let T;async function X(){T=new V({containerId:"shooting-game-area",blockRevealContainerId:"block-reveal-area",backgroundImage:"./assets/images/background.png",foregroundImage:"./assets/images/foreground.png",blockSize:8,gravity:1e3,explosionForce:300,fadeOutDuration:500,stageCount:3,playerLives:3,continueCount:3});const o=()=>{var r,h,n;const t=((r=T.scoreSystem)==null?void 0:r.getScore())||0,e=((h=T.scoreSystem)==null?void 0:h.getHighScore())||0,s=((n=T.stageSystem)==null?void 0:n.getCurrentStage())||1;document.getElementById("score").textContent=t.toString(),document.getElementById("high-score").textContent=e.toString(),document.getElementById("stage").textContent=s.toString(),requestAnimationFrame(o)};o()}document.getElementById("reset-button").addEventListener("click",()=>{T&&T.reset()});window.addEventListener("load",X);
