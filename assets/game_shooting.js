var B=Object.defineProperty;var w=(n,t,e)=>t in n?B(n,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[t]=e;var i=(n,t,e)=>w(n,typeof t!="symbol"?t+"":t,e);import{B as x,C as b,a as C,T as y}from"./BaseInputHandler.js";import{G as c}from"./Graphics.js";var p=(n=>(n.SMALL="small",n.MEDIUM="medium",n.LARGE="large",n))(p||{}),f=(n=>(n[n.SMALL=3]="SMALL",n[n.MEDIUM=6]="MEDIUM",n[n.LARGE=200]="LARGE",n))(f||{});class M extends x{constructor(e){super({container:e.getApp().stage,onInput:()=>{}});i(this,"controller");i(this,"keys",new Set);i(this,"moveSpeed",1);i(this,"app");this.controller=e,this.app=e.getApp()}setupEventListeners(){this.handleKeyDown=this.handleKeyDown.bind(this),this.handleKeyUp=this.handleKeyUp.bind(this),this.updateMovement=this.updateMovement.bind(this)}onEnable(){window.addEventListener("keydown",this.handleKeyDown),window.addEventListener("keyup",this.handleKeyUp),this.app.ticker.add(this.updateMovement)}onDisable(){window.removeEventListener("keydown",this.handleKeyDown),window.removeEventListener("keyup",this.handleKeyUp),this.app.ticker.remove(this.updateMovement)}handleKeyDown(e){this.isEnabled&&this.keys.add(e.key)}handleKeyUp(e){this.keys.delete(e.key)}updateMovement(){if(!this.isEnabled)return;let e=0,s=0;(this.keys.has("ArrowLeft")||this.keys.has("a")||this.keys.has("A"))&&(e-=this.moveSpeed),(this.keys.has("ArrowRight")||this.keys.has("d")||this.keys.has("D"))&&(e+=this.moveSpeed),(this.keys.has("ArrowUp")||this.keys.has("w")||this.keys.has("W"))&&(s-=this.moveSpeed),(this.keys.has("ArrowDown")||this.keys.has("s")||this.keys.has("S"))&&(s+=this.moveSpeed);const r=this.keys.has("Shift");this.controller.setPlayerSlowMode(r),(e!==0||s!==0)&&(e!==0&&s!==0&&(e*=.707,s*=.707),this.controller.movePlayer(e,s))}destroy(){this.disable(),this.keys.clear()}}class v{constructor(t){i(this,"sprite");i(this,"vx");i(this,"vy");i(this,"damage");i(this,"isPlayerBullet");i(this,"radius");this.vx=t.vx,this.vy=t.vy,this.damage=t.damage,this.isPlayerBullet=t.isPlayerBullet,this.radius=t.radius||4,this.sprite=new c,this.sprite.circle(0,0,this.radius).fill(t.color||16711680),this.sprite.x=t.x,this.sprite.y=t.y}update(t,e){const s=t/e;this.sprite.x+=this.vx*s,this.sprite.y+=this.vy*s}isOutOfBounds(t,e){return this.sprite.x<-50||this.sprite.x>t+50||this.sprite.y<-50||this.sprite.y>e+50}getSprite(){return this.sprite}getX(){return this.sprite.x}getY(){return this.sprite.y}getRadius(){return this.radius}getDamage(){return this.damage}getIsPlayerBullet(){return this.isPlayerBullet}}class H{constructor(t){i(this,"sprite");i(this,"shipSprite");i(this,"hitboxSprite");i(this,"hpBarContainer");i(this,"hpBarBg");i(this,"hpBarFill");i(this,"config");i(this,"slowMode",!1);i(this,"lastFireTime",0);i(this,"gameTime",0);i(this,"lives",3);i(this,"currentHp");i(this,"maxHp");i(this,"invulnerable",!1);i(this,"invulnerableTime",0);this.config=t,this.maxHp=t.maxHp,this.currentHp=this.maxHp,this.sprite=new b,this.shipSprite=new c,this.drawShip(),this.sprite.addChild(this.shipSprite),this.hitboxSprite=new c,this.drawHitbox(),this.hitboxSprite.visible=!1,this.sprite.addChild(this.hitboxSprite),this.hpBarContainer=new b,this.hpBarBg=new c,this.hpBarFill=new c,this.setupHpBar(),this.sprite.x=t.x,this.sprite.y=t.y}drawShip(){this.shipSprite.clear(),this.shipSprite.moveTo(0,-15),this.shipSprite.lineTo(-10,10),this.shipSprite.lineTo(0,5),this.shipSprite.lineTo(10,10),this.shipSprite.closePath(),this.shipSprite.fill(65280)}drawHitbox(){this.hitboxSprite.clear(),this.hitboxSprite.circle(0,0,this.config.hitboxRadius).fill({color:16711680,alpha:.5})}setupHpBar(){this.hpBarContainer.x=-50,this.hpBarContainer.y=-40,this.hpBarBg.rect(0,0,100,8).fill(3355443),this.hpBarContainer.addChild(this.hpBarBg),this.drawHpBar(),this.hpBarContainer.addChild(this.hpBarFill),this.sprite.addChild(this.hpBarContainer)}drawHpBar(){this.hpBarFill.clear();const t=this.currentHp/this.maxHp,e=100*t;let s=65280;t<=.5&&(s=16776960),t<=.25&&(s=16711680),this.hpBarFill.rect(0,0,e,8).fill(s)}update(t,e){const s=t/e;this.gameTime+=s,this.invulnerable&&(this.invulnerableTime-=s,this.invulnerableTime<=0?(this.invulnerable=!1,this.sprite.alpha=1):this.sprite.alpha=Math.sin(this.invulnerableTime*.02)>0?1:.5)}move(t,e){const s=this.slowMode?this.config.slowSpeed:this.config.speed;this.sprite.x+=t*s,this.sprite.y+=e*s}clampPosition(t,e,s,r){this.sprite.x=Math.max(t+20,Math.min(s-20,this.sprite.x)),this.sprite.y=Math.max(e+20,Math.min(r-20,this.sprite.y))}setSlowMode(t){this.slowMode=t,this.hitboxSprite.visible=t}shoot(){if(this.gameTime-this.lastFireTime<this.config.fireRate)return[];this.lastFireTime=this.gameTime;const t=[],e=new v({x:this.sprite.x,y:this.sprite.y-20,vx:0,vy:-.45,damage:1,isPlayerBullet:!0,color:65280,radius:1.33});return t.push(e),t}takeDamage(t=1){if(!this.invulnerable){if(this.currentHp-=t,this.drawHpBar(),this.currentHp<=0)if(this.currentHp=0,this.lives--,this.lives>0)this.currentHp=this.maxHp,this.drawHpBar();else{console.log("Game Over");return}this.invulnerable=!0,this.invulnerableTime=1e3}}reset(){this.sprite.x=this.config.x,this.sprite.y=this.config.y,this.lives=3,this.currentHp=this.maxHp,this.drawHpBar(),this.invulnerable=!1,this.invulnerableTime=0,this.sprite.alpha=1,this.slowMode=!1,this.hitboxSprite.visible=!1,this.gameTime=0,this.lastFireTime=0}getSprite(){return this.sprite}getX(){return this.sprite.x}getY(){return this.sprite.y}getHitboxRadius(){return this.config.hitboxRadius}isInvulnerable(){return this.invulnerable}getCurrentHp(){return this.currentHp}getMaxHp(){return this.maxHp}getLives(){return this.lives}}class k{constructor(t){i(this,"currentStage",1);i(this,"maxStages");i(this,"isStageActive",!0);i(this,"isBossPhase",!1);this.maxStages=t}getCurrentStage(){return this.currentStage}isActive(){return this.isStageActive}isBossActive(){return this.isBossPhase}startBossPhase(){this.isBossPhase=!0}completeBossPhase(){this.isBossPhase=!1,this.nextStage()}nextStage(){this.currentStage<this.maxStages?this.currentStage++:this.isStageActive=!1}reset(){this.currentStage=1,this.isStageActive=!0,this.isBossPhase=!1}}class A{constructor(t,e,s){i(this,"sprite");i(this,"config");i(this,"hp");i(this,"maxHp");i(this,"time",0);i(this,"lastFireTime",0);i(this,"startX");i(this,"startY");i(this,"shouldFireNow",!1);this.config=t,this.hp=t.hp,this.maxHp=t.hp,this.startX=e,this.startY=s,this.sprite=new c,this.drawEnemy(),this.sprite.x=e,this.sprite.y=s}drawEnemy(){this.sprite.clear();const t=this.getColorByType(),e=this.getSizeByType();this.sprite.circle(0,0,e).fill(t),this.hp<this.maxHp&&(this.sprite.lineStyle(2,16777215),this.sprite.arc(0,0,e+5,-Math.PI/2,-Math.PI/2+Math.PI*2*this.hp/this.maxHp))}getColorByType(){switch(this.config.type){case"small":return 16737894;case"medium":return 16724787;case"large":return 16711680;default:return 16711680}}getSizeByType(){switch(this.config.type){case"small":return 20;case"medium":return 30;case"large":return 40;default:return 20}}update(t,e){const s=t/e;this.time+=s,this.updateMovement(s),this.shouldFireNow=this.updateFiring()}updateMovement(t){const e=this.config.movement,s=this.time*.001;switch(e.type){case"linear":this.sprite.y+=e.speed*t;break;case"sine":this.sprite.x=this.startX+Math.sin(s*(e.frequency||1))*(e.amplitude||50),this.sprite.y+=e.speed*t;break;case"circular":const r=s*(e.frequency||1);this.sprite.x=this.startX+Math.cos(r)*(e.amplitude||50),this.sprite.y=this.startY+Math.sin(r)*(e.amplitude||50)+s*e.speed;break;case"custom":if(e.customFunction){const h=e.customFunction(s);this.sprite.x=this.startX+h.x,this.sprite.y=this.startY+h.y}break}}updateFiring(){if(!this.config.firePattern)return!1;const t=this.config.firePattern;return this.time-this.lastFireTime>=t.interval?(this.lastFireTime=this.time,!0):!1}shouldFire(){return this.shouldFireNow}createBullets(t){const e=[];switch(t.type){case"single":e.push(new v({x:this.sprite.x,y:this.sprite.y,vx:0,vy:t.bulletSpeed,damage:1,isPlayerBullet:!1}));break;case"spread":const s=t.bulletCount||3,r=t.spreadAngle||30;for(let a=0;a<s;a++){const l=r*(a-(s-1)/2)*Math.PI/180;e.push(new v({x:this.sprite.x,y:this.sprite.y,vx:Math.sin(l)*t.bulletSpeed,vy:Math.cos(l)*t.bulletSpeed,damage:1,isPlayerBullet:!1}))}break;case"circular":const h=t.bulletCount||8;for(let a=0;a<h;a++){const l=360/h*a*Math.PI/180;e.push(new v({x:this.sprite.x,y:this.sprite.y,vx:Math.cos(l)*t.bulletSpeed,vy:Math.sin(l)*t.bulletSpeed,damage:1,isPlayerBullet:!1}))}break}return e}takeDamage(t){this.hp-=t,this.drawEnemy()}isAlive(){return this.hp>0}isOutOfBounds(t,e){return this.sprite.x<-100||this.sprite.x>t+100||this.sprite.y>e+100}getSprite(){return this.sprite}getX(){return this.sprite.x}getY(){return this.sprite.y}getRadius(){return this.getSizeByType()}getScore(){return this.config.score}getFirePattern(){return this.config.firePattern}}class E{constructor(t,e){i(this,"spawnTimer",0);i(this,"spawnInterval",2e3);i(this,"gameWidth");this.gameWidth=t}update(t,e,s){const r=t/s;this.spawnTimer+=r;const h=[];if(this.spawnTimer>=this.spawnInterval){this.spawnTimer=0;const a=Math.min(e,3);for(let l=0;l<a;l++)h.push(this.createEnemy(e));this.spawnInterval=Math.max(1e3,2e3-e*100)}return h}createEnemy(t){const e=Math.random()*(this.gameWidth-100)+50,s=-50,h=[p.SMALL,p.MEDIUM,p.LARGE][Math.min(Math.floor(Math.random()*t),2)];let a,l;switch(h){case p.SMALL:a=3,l=100;break;case p.MEDIUM:a=3,l=300;break;case p.LARGE:a=3,l=500;break}const o=Math.random()>.5?"sine":"linear";return new A({type:h,hp:a,score:l,movement:{type:o,speed:.05+Math.random()*.03,amplitude:o==="sine"?50+Math.random()*50:void 0,frequency:o==="sine"?1+Math.random():void 0},firePattern:{type:"single",interval:800,bulletSpeed:.2}},e,s)}reset(){this.spawnTimer=0,this.spawnInterval=2e3}}class P{constructor(t,e,s,r,h,a){i(this,"player");i(this,"getEnemies");i(this,"getEnemyBullets");i(this,"getPlayerBullets");this.player=t,this.getEnemies=e,this.getEnemyBullets=s,this.getPlayerBullets=r}check(){const t={playerHit:!1,destroyedEnemies:[],hitBullets:[],hitPlayerBullets:[]},e=this.getEnemies(),s=this.getEnemyBullets(),r=this.getPlayerBullets();if(!this.player.isInvulnerable())for(const h of s)this.checkCircleCollision(this.player.getX(),this.player.getY(),this.player.getHitboxRadius(),h.getX(),h.getY(),h.getRadius())&&(t.playerHit=!0,t.hitBullets.push(h));for(const h of r)for(const a of e)if(a.isAlive()&&this.checkCircleCollision(h.getX(),h.getY(),h.getRadius(),a.getX(),a.getY(),a.getRadius())){a.takeDamage(h.getDamage()),t.hitPlayerBullets.push(h),a.isAlive()||t.destroyedEnemies.push(a);break}return t}checkCircleCollision(t,e,s,r,h,a){const l=r-t,o=h-e;return Math.sqrt(l*l+o*o)<s+a}}class T{constructor(){i(this,"score",0);i(this,"highScore",0);i(this,"combo",0);i(this,"maxCombo",0);const t=localStorage.getItem("shootingHighScore");t&&(this.highScore=parseInt(t,10))}addScore(t){this.score+=t*(1+this.combo*.1),this.combo++,this.maxCombo=Math.max(this.maxCombo,this.combo),this.score>this.highScore&&(this.highScore=this.score,localStorage.setItem("shootingHighScore",this.highScore.toString()))}resetCombo(){this.combo=0}getScore(){return Math.floor(this.score)}getHighScore(){return Math.floor(this.highScore)}getCombo(){return this.combo}reset(){this.score=0,this.combo=0,this.maxCombo=0}}class I{constructor(){i(this,"grazeRadius",30);i(this,"grazedBullets",new Set)}checkGraze(t,e){let s=0;const r=[];for(const a of e)if(!a.getIsPlayerBullet()&&!this.grazedBullets.has(a)){const l=this.getDistance(t.getX(),t.getY(),a.getX(),a.getY());l<this.grazeRadius&&l>t.getHitboxRadius()+a.getRadius()&&(this.grazedBullets.add(a),s++,r.push({bullet:a,x:a.getX(),y:a.getY()}))}const h=new Set(e);for(const a of this.grazedBullets)h.has(a)||this.grazedBullets.delete(a);return{count:s,events:r}}createGrazeEffect(t,e,s){for(let h=0;h<8;h++){const a=new c;a.circle(0,0,2).fill(16776960);const l=h/8*Math.PI*2,o=50+Math.random()*30,g=Math.cos(l)*o,m=Math.sin(l)*o;a.x=e,a.y=s,t.addChild(a);let d=.5;const S=()=>{if(d-=1/60,d<=0){t.removeChild(a);return}a.x+=g*(1/60),a.y+=m*(1/60),a.alpha=d/.5,requestAnimationFrame(S)};requestAnimationFrame(S)}}getDistance(t,e,s,r){const h=s-t,a=r-e;return Math.sqrt(h*h+a*a)}reset(){this.grazedBullets.clear()}}class F extends C{constructor(e){super(e);i(this,"gameContainer");i(this,"inputHandler");i(this,"player");i(this,"enemies",[]);i(this,"boss",null);i(this,"bullets",[]);i(this,"playerBullets",[]);i(this,"stageSystem");i(this,"enemySpawner");i(this,"collisionSystem");i(this,"scoreSystem");i(this,"grazeSystem");i(this,"gameAreaWidth");i(this,"gameAreaHeight");i(this,"lastScoreThreshold",0);this.gameAreaWidth=e.gameAreaWidth||480,this.gameAreaHeight=e.gameAreaHeight||640}setupGameSpecific(){this.setupGameArea(),this.initPlayer(),this.initSystems(),this.setupInputHandler(),this.app.ticker.add(e=>this.update(e.deltaTime),this)}setupGameArea(){this.gameContainer=new b,this.app.stage.addChild(this.gameContainer);const e=new c;e.rect(0,0,this.gameAreaWidth,this.gameAreaHeight).fill(4386),this.gameContainer.addChild(e);const s=new c;s.rect(0,0,this.gameAreaWidth,this.gameAreaHeight).fill(16777215),this.gameContainer.mask=s,this.gameContainer.addChild(s)}initPlayer(){this.player=new H({x:this.gameAreaWidth/2,y:this.gameAreaHeight-100,speed:1.7,slowSpeed:.7,hitboxRadius:4,fireRate:250,maxHp:5}),this.gameContainer.addChild(this.player.getSprite())}initSystems(){this.scoreSystem=new T;const e=this.options;this.stageSystem=new k(e.stageCount||3),this.enemySpawner=new E(this.gameAreaWidth,this.gameAreaHeight),this.collisionSystem=new P(this.player,()=>this.enemies,()=>this.bullets,()=>this.playerBullets,this.gameAreaWidth,this.gameAreaHeight),this.grazeSystem=new I}setupInputHandler(){this.inputHandler=new M(this)}update(e){this.updateScroll(e),this.updateEntities(e),this.spawnEnemies(e),this.checkCollisions(),this.checkScoreThreshold(),this.cleanupEntities()}updateScroll(e){}updateEntities(e){this.player.update(e,y.targetFPMS),this.player.shoot().forEach(r=>{this.playerBullets.push(r),this.gameContainer.addChild(r.getSprite())}),this.enemies.forEach(r=>{r.update(e,y.targetFPMS),r.shouldFire()&&r.getFirePattern()&&r.createBullets(r.getFirePattern()).forEach(a=>{this.bullets.push(a),this.gameContainer.addChild(a.getSprite())})}),this.boss&&this.boss.update(e),this.bullets.forEach(r=>r.update(e,y.targetFPMS)),this.playerBullets.forEach(r=>r.update(e,y.targetFPMS))}spawnEnemies(e){!this.boss&&this.stageSystem.isActive()&&this.enemySpawner.update(e,this.stageSystem.getCurrentStage(),y.targetFPMS).forEach(r=>{this.enemies.push(r),this.gameContainer.addChild(r.getSprite())})}checkCollisions(){const e=this.collisionSystem.check();e.playerHit&&this.player.takeDamage(),e.destroyedEnemies.forEach(r=>{this.scoreSystem.addScore(r.getScore()),this.triggerBlockReveal(r.getX(),r.getY(),f.SMALL)}),e.hitBullets.forEach(r=>{this.gameContainer.removeChild(r.getSprite())}),this.bullets=this.bullets.filter(r=>!e.hitBullets.includes(r)),e.hitPlayerBullets.forEach(r=>{this.gameContainer.removeChild(r.getSprite())}),this.playerBullets=this.playerBullets.filter(r=>!e.hitPlayerBullets.includes(r));const s=this.grazeSystem.checkGraze(this.player,this.bullets);s.count>0&&(this.scoreSystem.addScore(s.count*10),this.triggerBlockReveal(this.player.getX(),this.player.getY(),f.SMALL),s.events.forEach(r=>{this.grazeSystem.createGrazeEffect(this.gameContainer,r.x,r.y)}))}checkScoreThreshold(){const e=this.scoreSystem.getScore(),s=Math.floor(e/1e4)*1e4;s>this.lastScoreThreshold&&s>0&&(this.lastScoreThreshold=s,this.triggerBlockReveal(this.gameAreaWidth/2,this.gameAreaHeight/2,f.MEDIUM))}cleanupEntities(){this.enemies=this.enemies.filter(e=>!e.isAlive()||e.isOutOfBounds(this.gameAreaWidth,this.gameAreaHeight)?(this.gameContainer.removeChild(e.getSprite()),!1):!0),this.bullets=this.bullets.filter(e=>e.isOutOfBounds(this.gameAreaWidth,this.gameAreaHeight)?(this.gameContainer.removeChild(e.getSprite()),!1):!0),this.playerBullets=this.playerBullets.filter(e=>e.isOutOfBounds(this.gameAreaWidth,this.gameAreaHeight)?(this.gameContainer.removeChild(e.getSprite()),!1):!0)}triggerBlockReveal(e,s,r){const h=Math.random(),a=Math.random();this.blockReveal.reveal({x:h,y:a,radius:r,force:r*.1,duration:1e3})}movePlayer(e,s){this.player.move(e,s),this.player.clampPosition(0,0,this.gameAreaWidth,this.gameAreaHeight)}setPlayerSlowMode(e){this.player.setSlowMode(e)}playerShoot(){this.player.shoot().forEach(s=>{this.playerBullets.push(s),this.gameContainer.addChild(s.getSprite())})}onImagesLoaded(){console.log("Shooting game images loaded"),this.inputHandler&&this.inputHandler.enable()}setupAdditionalEventListeners(){}handleGameSpecificKeyDown(e){this.inputHandler.handleKeyDown(e)}onReset(){this.enemies.forEach(e=>this.gameContainer.removeChild(e.getSprite())),this.bullets.forEach(e=>this.gameContainer.removeChild(e.getSprite())),this.playerBullets.forEach(e=>this.gameContainer.removeChild(e.getSprite())),this.enemies=[],this.bullets=[],this.playerBullets=[],this.boss=null,this.player.reset(),this.scoreSystem.reset(),this.stageSystem.reset(),this.lastScoreThreshold=0}destroyGameSpecific(){this.app.ticker.remove(e=>this.update(e.deltaTime),this),this.inputHandler.destroy()}resize(){super.resize();const e=this.containerElement,s=e.clientWidth,r=e.clientHeight,a=s*1,l=r,o=a/this.gameAreaWidth,g=l/this.gameAreaHeight,m=Math.min(o,g);this.gameContainer.scale.set(m);const d=this.gameAreaWidth*m,S=this.gameAreaHeight*m;this.gameContainer.x=(s-d)/2,this.gameContainer.y=(r-S)/2}}let u;async function L(){u=new F({containerId:"shooting-game-area",blockRevealContainerId:"block-reveal-area",backgroundImage:"./assets/images/background.png",foregroundImage:"./assets/images/foreground.png",blockSize:8,gravity:1e3,explosionForce:300,fadeOutDuration:500,stageCount:3,playerLives:3,continueCount:3});const n=()=>{var r,h,a;const t=((r=u.scoreSystem)==null?void 0:r.getScore())||0,e=((h=u.scoreSystem)==null?void 0:h.getHighScore())||0,s=((a=u.stageSystem)==null?void 0:a.getCurrentStage())||1;document.getElementById("score").textContent=t.toString(),document.getElementById("high-score").textContent=e.toString(),document.getElementById("stage").textContent=s.toString(),requestAnimationFrame(n)};n()}document.getElementById("reset-button").addEventListener("click",()=>{u&&u.reset()});window.addEventListener("load",L);
