var y=Object.defineProperty;var N=(o,s,e)=>s in o?y(o,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[s]=e;var r=(o,s,e)=>N(o,typeof s!="symbol"?s+"":s,e);import{B as H,C as M,T as _,S as P,a as O,A as R,b as S}from"./BaseInputHandler.js";import{G as u}from"./Graphics.js";var c=(o=>(o.SMALL="small",o.MEDIUM="medium",o.LARGE="large",o))(c||{}),d=(o=>(o.TYPE1="type1",o.TYPE2="type2",o))(d||{}),I=(o=>(o[o.SMALL=9]="SMALL",o[o.MEDIUM=18]="MEDIUM",o[o.LARGE=600]="LARGE",o))(I||{});class t{}r(t,"GAME",{AREA_WIDTH:480,AREA_HEIGHT:640,BACKGROUND_COLOR:4386,AREA_RATIO:1}),r(t,"BACKGROUND",{IMAGE_PATH:"./assets/images/shooting/bg_1.png",SCROLL_SPEED:.1}),r(t,"PLAYER",{DEFAULT_Y_OFFSET:100,MOVEMENT_MARGIN:20,HITBOX_RADIUS:4,SPEED:.35,SLOW_SPEED:.15,DIAGONAL_MULTIPLIER:.707,FIRE_RATE:250,MAX_HP:5,DEFAULT_LIVES:3,INVULNERABILITY_DURATION:1e3,INVULNERABILITY_BLINK_RATE:.02,SHIP_COORDS:{TOP_X:0,TOP_Y:-15,LEFT_X:-10,LEFT_Y:10,BOTTOM_CENTER_X:0,BOTTOM_CENTER_Y:5,RIGHT_X:10,RIGHT_Y:10},HP_BAR:{WIDTH:100,HEIGHT:8,OFFSET_X:-50,OFFSET_Y:-40,COLORS:{HIGH:65280,MEDIUM:16776960,LOW:16711680}},BULLET:{OFFSET_Y:-20,VELOCITY_X:0,VELOCITY_Y:-.45,DAMAGE:1,COLOR:65280,RADIUS:1.33}}),r(t,"ENEMY",{IMAGES:{TYPE1:{PATH:"./assets/images/shooting/enemy_1.png",ORIGINAL_WIDTH:96,ORIGINAL_HEIGHT:128},TYPE2:{PATH:"./assets/images/shooting/enemy_2.png",ORIGINAL_WIDTH:128,ORIGINAL_HEIGHT:96}},TYPES:{SMALL:{WIDTH:28,HEIGHT:38,HP:3,SCORE:100},MEDIUM:{WIDTH:42,HEIGHT:56,HP:3,SCORE:300},LARGE:{WIDTH:56,HEIGHT:74,HP:3,SCORE:500}},TYPE2_SIZES:{SMALL:{WIDTH:38,HEIGHT:28,HP:2,SCORE:150},MEDIUM:{WIDTH:56,HEIGHT:42,HP:5,SCORE:400},LARGE:{WIDTH:74,HEIGHT:56,HP:8,SCORE:600}},COLORS:{SMALL:16737894,MEDIUM:16724787,LARGE:16711680},HEALTH_BAR:{STROKE_WIDTH:2,COLOR:16777215,RADIUS_OFFSET:5},MOVEMENT:{TIME_MULTIPLIER:.001,DEFAULT_AMPLITUDE:50,SPEED_MIN:.05,SPEED_RANDOM:.03,SINE_AMPLITUDE_MIN:50,SINE_AMPLITUDE_RANDOM:50,SINE_FREQUENCY_MIN:1,SINE_FREQUENCY_RANDOM:1},FIRING:{INTERVAL:800,BULLET_SPEED:.2,BULLET_DAMAGE:1,SPREAD_ANGLE:30,SPREAD_COUNT:3,CIRCULAR_COUNT:8},BOUNDS_MARGIN:100}),r(t,"SPAWNING",{DEFAULT_INTERVAL:2e3,INTERVAL_REDUCTION_PER_STAGE:100,MIN_INTERVAL:1e3,MAX_COUNT_PER_WAVE:3,SPAWN_Y_OFFSET:-50,SPAWN_MARGIN:50}),r(t,"BOSS",{VISUAL_SIZE:{WIDTH:80,HEIGHT:60},COLOR:16711935,POSITION_OFFSET:{X:-40,Y:-30}}),r(t,"BULLET",{DEFAULT_RADIUS:4,DEFAULT_COLOR:16711680,BOUNDS_MARGIN:50}),r(t,"GRAZE",{RADIUS:30,SCORE_PER_BULLET:10,PARTICLE:{COUNT:8,RADIUS:2,COLOR:16776960,SPEED_MIN:50,SPEED_MAX:80,LIFETIME:.5,TARGET_FPS:60}}),r(t,"SCORE",{COMBO_MULTIPLIER:.1,BLOCK_REVEAL_THRESHOLD:1e4}),r(t,"STAGE",{DEFAULT_MAX_STAGES:3,STARTING_STAGE:1}),r(t,"INPUT",{MOVE_SPEED:1}),r(t,"BLOCK_REVEAL",{FORCE_MULTIPLIER:.1,DURATION:1e3}),r(t,"DIFFICULTY",{EASY:{PLAYER_SPEED_MULTIPLIER:1.2,ENEMY_SPEED_MULTIPLIER:.8,SPAWN_INTERVAL_MULTIPLIER:1.5},NORMAL:{PLAYER_SPEED_MULTIPLIER:1,ENEMY_SPEED_MULTIPLIER:1,SPAWN_INTERVAL_MULTIPLIER:1},HARD:{PLAYER_SPEED_MULTIPLIER:.9,ENEMY_SPEED_MULTIPLIER:1.3,SPAWN_INTERVAL_MULTIPLIER:.7}});class C extends H{constructor(e){super({container:e.getApp().stage,onInput:()=>{}});r(this,"controller");r(this,"keys",new Set);r(this,"moveSpeed",t.INPUT.MOVE_SPEED);this.controller=e}setupEventListeners(){this.handleKeyDown=this.handleKeyDown.bind(this),this.handleKeyUp=this.handleKeyUp.bind(this)}onEnable(){window.addEventListener("keydown",this.handleKeyDown),window.addEventListener("keyup",this.handleKeyUp)}onDisable(){window.removeEventListener("keydown",this.handleKeyDown),window.removeEventListener("keyup",this.handleKeyUp)}handleKeyDown(e){this.isEnabled&&this.keys.add(e.key)}handleKeyUp(e){this.keys.delete(e.key)}updateMovement(e){if(!this.isEnabled)return;let i=0,a=0;(this.keys.has("ArrowLeft")||this.keys.has("a")||this.keys.has("A"))&&(i-=this.moveSpeed),(this.keys.has("ArrowRight")||this.keys.has("d")||this.keys.has("D"))&&(i+=this.moveSpeed),(this.keys.has("ArrowUp")||this.keys.has("w")||this.keys.has("W"))&&(a-=this.moveSpeed),(this.keys.has("ArrowDown")||this.keys.has("s")||this.keys.has("S"))&&(a+=this.moveSpeed);const n=this.keys.has("Shift");this.controller.setPlayerSlowMode(n),(i!==0||a!==0)&&(i!==0&&a!==0&&(i*=t.PLAYER.DIAGONAL_MULTIPLIER,a*=t.PLAYER.DIAGONAL_MULTIPLIER),this.controller.movePlayer(i,a,e))}destroy(){this.disable(),this.keys.clear()}}class L{constructor(s){r(this,"sprite");r(this,"vx");r(this,"vy");r(this,"damage");r(this,"isPlayerBullet");r(this,"radius");this.vx=s.vx,this.vy=s.vy,this.damage=s.damage,this.isPlayerBullet=s.isPlayerBullet,this.radius=s.radius||t.BULLET.DEFAULT_RADIUS,this.sprite=new u,this.sprite.circle(0,0,this.radius).fill(s.color||t.BULLET.DEFAULT_COLOR),this.sprite.x=s.x,this.sprite.y=s.y}update(s,e){const i=s/e;this.sprite.x+=this.vx*i,this.sprite.y+=this.vy*i}isOutOfBounds(s,e){const i=t.BULLET.BOUNDS_MARGIN;return this.sprite.x<-i||this.sprite.x>s+i||this.sprite.y<-i||this.sprite.y>e+i}getSprite(){return this.sprite}getX(){return this.sprite.x}getY(){return this.sprite.y}getRadius(){return this.radius}getDamage(){return this.damage}getIsPlayerBullet(){return this.isPlayerBullet}}class B{constructor(s){r(this,"sprite");r(this,"shipSprite");r(this,"hitboxSprite");r(this,"hpBarContainer");r(this,"hpBarBg");r(this,"hpBarFill");r(this,"config");r(this,"slowMode",!1);r(this,"lastFireTime",0);r(this,"gameTime",0);r(this,"lives",t.PLAYER.DEFAULT_LIVES);r(this,"currentHp");r(this,"maxHp");r(this,"invulnerable",!1);r(this,"invulnerableTime",0);this.config=s,this.maxHp=s.maxHp,this.currentHp=this.maxHp,this.sprite=new M,this.shipSprite=new u,this.drawShip(),this.sprite.addChild(this.shipSprite),this.hitboxSprite=new u,this.drawHitbox(),this.hitboxSprite.visible=!1,this.sprite.addChild(this.hitboxSprite),this.hpBarContainer=new M,this.hpBarBg=new u,this.hpBarFill=new u,this.setupHpBar(),this.sprite.x=s.x,this.sprite.y=s.y}drawShip(){this.shipSprite.clear(),this.shipSprite.moveTo(t.PLAYER.SHIP_COORDS.TOP_X,t.PLAYER.SHIP_COORDS.TOP_Y),this.shipSprite.lineTo(t.PLAYER.SHIP_COORDS.LEFT_X,t.PLAYER.SHIP_COORDS.LEFT_Y),this.shipSprite.lineTo(t.PLAYER.SHIP_COORDS.BOTTOM_CENTER_X,t.PLAYER.SHIP_COORDS.BOTTOM_CENTER_Y),this.shipSprite.lineTo(t.PLAYER.SHIP_COORDS.RIGHT_X,t.PLAYER.SHIP_COORDS.RIGHT_Y),this.shipSprite.closePath(),this.shipSprite.fill(65280)}drawHitbox(){this.hitboxSprite.clear(),this.hitboxSprite.circle(0,0,this.config.hitboxRadius).fill({color:16711680,alpha:.5})}setupHpBar(){this.hpBarContainer.x=t.PLAYER.HP_BAR.OFFSET_X,this.hpBarContainer.y=t.PLAYER.HP_BAR.OFFSET_Y,this.hpBarBg.rect(0,0,t.PLAYER.HP_BAR.WIDTH,t.PLAYER.HP_BAR.HEIGHT).fill(3355443),this.hpBarContainer.addChild(this.hpBarBg),this.drawHpBar(),this.hpBarContainer.addChild(this.hpBarFill),this.sprite.addChild(this.hpBarContainer)}drawHpBar(){this.hpBarFill.clear();const s=this.currentHp/this.maxHp,e=t.PLAYER.HP_BAR.WIDTH*s;let i=t.PLAYER.HP_BAR.COLORS.HIGH;s<=.5&&(i=t.PLAYER.HP_BAR.COLORS.MEDIUM),s<=.25&&(i=t.PLAYER.HP_BAR.COLORS.LOW),this.hpBarFill.rect(0,0,e,t.PLAYER.HP_BAR.HEIGHT).fill(i)}update(s,e){const i=s/e;this.gameTime+=i,this.invulnerable&&(this.invulnerableTime-=i,this.invulnerableTime<=0?(this.invulnerable=!1,this.sprite.alpha=1):this.sprite.alpha=Math.sin(this.invulnerableTime*t.PLAYER.INVULNERABILITY_BLINK_RATE)>0?1:.5)}move(s,e,i,a){const n=this.slowMode?this.config.slowSpeed:this.config.speed,h=i/a;this.sprite.x+=s*n*h,this.sprite.y+=e*n*h}clampPosition(s,e,i,a){this.sprite.x=Math.max(s+t.PLAYER.MOVEMENT_MARGIN,Math.min(i-t.PLAYER.MOVEMENT_MARGIN,this.sprite.x)),this.sprite.y=Math.max(e+t.PLAYER.MOVEMENT_MARGIN,Math.min(a-t.PLAYER.MOVEMENT_MARGIN,this.sprite.y))}setSlowMode(s){this.slowMode=s,this.hitboxSprite.visible=s}shoot(){if(this.gameTime-this.lastFireTime<this.config.fireRate)return[];this.lastFireTime=this.gameTime;const s=[],e=new L({x:this.sprite.x,y:this.sprite.y+t.PLAYER.BULLET.OFFSET_Y,vx:t.PLAYER.BULLET.VELOCITY_X,vy:t.PLAYER.BULLET.VELOCITY_Y,damage:t.PLAYER.BULLET.DAMAGE,isPlayerBullet:!0,color:t.PLAYER.BULLET.COLOR,radius:t.PLAYER.BULLET.RADIUS});return s.push(e),s}takeDamage(s=1){if(!this.invulnerable){if(this.currentHp-=s,this.drawHpBar(),this.currentHp<=0)if(this.currentHp=0,this.lives--,this.lives>0)this.currentHp=this.maxHp,this.drawHpBar();else{console.log("Game Over");return}this.invulnerable=!0,this.invulnerableTime=t.PLAYER.INVULNERABILITY_DURATION}}reset(){this.sprite.x=this.config.x,this.sprite.y=this.config.y,this.lives=t.PLAYER.DEFAULT_LIVES,this.currentHp=this.maxHp,this.drawHpBar(),this.invulnerable=!1,this.invulnerableTime=0,this.sprite.alpha=1,this.slowMode=!1,this.hitboxSprite.visible=!1,this.gameTime=0,this.lastFireTime=0}getSprite(){return this.sprite}getX(){return this.sprite.x}getY(){return this.sprite.y}getHitboxRadius(){return this.config.hitboxRadius}isInvulnerable(){return this.invulnerable}getCurrentHp(){return this.currentHp}getMaxHp(){return this.maxHp}getLives(){return this.lives}}class D{constructor(s){r(this,"currentStage",1);r(this,"maxStages");r(this,"isStageActive",!0);r(this,"isBossPhase",!1);this.maxStages=s}getCurrentStage(){return this.currentStage}isActive(){return this.isStageActive}isBossActive(){return this.isBossPhase}startBossPhase(){this.isBossPhase=!0}completeBossPhase(){this.isBossPhase=!1,this.nextStage()}nextStage(){this.currentStage<this.maxStages?this.currentStage++:this.isStageActive=!1}reset(){this.currentStage=1,this.isStageActive=!0,this.isBossPhase=!1}}class Y{constructor(s,e,i){r(this,"sprite");r(this,"healthBar");r(this,"config");r(this,"hp");r(this,"maxHp");r(this,"time",0);r(this,"lastFireTime",0);r(this,"startX");r(this,"startY");r(this,"shouldFireNow",!1);this.config=s,this.hp=s.hp,this.maxHp=s.hp,this.startX=e,this.startY=i,this.createSprite(),this.createHealthBar(),this.sprite.x=e,this.sprite.y=i}createSprite(){const e=(this.config.imageType||d.TYPE1)===d.TYPE1?t.ENEMY.IMAGES.TYPE1.PATH:t.ENEMY.IMAGES.TYPE2.PATH,i=_.from(e);this.sprite=new P(i),this.sprite.anchor.set(.5,.5);const a=this.getDimensionsByType();this.sprite.width=a.width,this.sprite.height=a.height}createHealthBar(){this.healthBar=new u,this.sprite.addChild(this.healthBar),this.updateHealthBar()}updateHealthBar(){if(this.healthBar.clear(),this.hp<this.maxHp){const s=this.getDimensionsByType(),e=Math.max(s.width,s.height)/2+t.ENEMY.HEALTH_BAR.RADIUS_OFFSET;this.healthBar.lineStyle(t.ENEMY.HEALTH_BAR.STROKE_WIDTH,t.ENEMY.HEALTH_BAR.COLOR),this.healthBar.arc(0,0,e,-Math.PI/2,-Math.PI/2+Math.PI*2*this.hp/this.maxHp)}}getDimensionsByType(){const e=(this.config.imageType||d.TYPE1)===d.TYPE1?t.ENEMY.TYPES:t.ENEMY.TYPE2_SIZES;switch(this.config.type){case"small":return{width:e.SMALL.WIDTH,height:e.SMALL.HEIGHT};case"medium":return{width:e.MEDIUM.WIDTH,height:e.MEDIUM.HEIGHT};case"large":return{width:e.LARGE.WIDTH,height:e.LARGE.HEIGHT};default:return{width:e.SMALL.WIDTH,height:e.SMALL.HEIGHT}}}update(s,e){const i=s/e;this.time+=i,this.updateMovement(i),this.shouldFireNow=this.updateFiring()}updateMovement(s){const e=this.config.movement,i=this.time*t.ENEMY.MOVEMENT.TIME_MULTIPLIER;switch(e.type){case"linear":this.sprite.y+=e.speed*s;break;case"sine":this.sprite.x=this.startX+Math.sin(i*(e.frequency||1))*(e.amplitude||t.ENEMY.MOVEMENT.DEFAULT_AMPLITUDE),this.sprite.y+=e.speed*s;break;case"circular":const a=i*(e.frequency||1);this.sprite.x=this.startX+Math.cos(a)*(e.amplitude||t.ENEMY.MOVEMENT.DEFAULT_AMPLITUDE),this.sprite.y=this.startY+Math.sin(a)*(e.amplitude||t.ENEMY.MOVEMENT.DEFAULT_AMPLITUDE),this.sprite.y+=e.speed*s;break;case"custom":if(e.customFunction){const n=e.customFunction(i);this.sprite.x=this.startX+n.x,this.sprite.y=this.startY+n.y}break}}updateFiring(){if(!this.config.firePattern)return!1;const s=this.config.firePattern;return this.time-this.lastFireTime>=s.interval?(this.lastFireTime=this.time,!0):!1}shouldFire(){return this.shouldFireNow}createBullets(s){const e=[];switch(s.type){case"single":e.push(new L({x:this.sprite.x,y:this.sprite.y,vx:0,vy:s.bulletSpeed,damage:t.ENEMY.FIRING.BULLET_DAMAGE,isPlayerBullet:!1}));break;case"spread":const i=s.bulletCount||t.ENEMY.FIRING.SPREAD_COUNT,a=s.spreadAngle||t.ENEMY.FIRING.SPREAD_ANGLE;for(let h=0;h<i;h++){const l=a*(h-(i-1)/2)*Math.PI/180;e.push(new L({x:this.sprite.x,y:this.sprite.y,vx:Math.sin(l)*s.bulletSpeed,vy:Math.cos(l)*s.bulletSpeed,damage:t.ENEMY.FIRING.BULLET_DAMAGE,isPlayerBullet:!1}))}break;case"circular":const n=s.bulletCount||t.ENEMY.FIRING.CIRCULAR_COUNT;for(let h=0;h<n;h++){const l=360/n*h*Math.PI/180;e.push(new L({x:this.sprite.x,y:this.sprite.y,vx:Math.cos(l)*s.bulletSpeed,vy:Math.sin(l)*s.bulletSpeed,damage:t.ENEMY.FIRING.BULLET_DAMAGE,isPlayerBullet:!1}))}break}return e}takeDamage(s){this.hp-=s,this.updateHealthBar()}isAlive(){return this.hp>0}isOutOfBounds(s,e){const i=t.ENEMY.BOUNDS_MARGIN;return this.sprite.x<-i||this.sprite.x>s+i||this.sprite.y>e+i}getSprite(){return this.sprite}getX(){return this.sprite.x}getY(){return this.sprite.y}getRadius(){const s=this.getDimensionsByType();return Math.max(s.width,s.height)/2}getScore(){return this.config.score}getFirePattern(){return this.config.firePattern}}class f{constructor(s,e){r(this,"spawnTimer",0);r(this,"spawnInterval",t.SPAWNING.DEFAULT_INTERVAL);r(this,"gameWidth");this.gameWidth=s}update(s,e,i){const a=s/i;this.spawnTimer+=a;const n=[];if(this.spawnTimer>=this.spawnInterval){this.spawnTimer=0;const h=Math.min(e,t.SPAWNING.MAX_COUNT_PER_WAVE);for(let l=0;l<h;l++)n.push(this.createEnemy(e));this.spawnInterval=Math.max(t.SPAWNING.MIN_INTERVAL,t.SPAWNING.DEFAULT_INTERVAL-e*t.SPAWNING.INTERVAL_REDUCTION_PER_STAGE)}return n}createEnemy(s){const e=Math.random()*(this.gameWidth-t.SPAWNING.SPAWN_MARGIN*2)+t.SPAWNING.SPAWN_MARGIN,i=t.SPAWNING.SPAWN_Y_OFFSET,n=[c.SMALL,c.MEDIUM,c.LARGE][Math.min(Math.floor(Math.random()*s),2)],h=Math.random()<.3+s*.1?d.TYPE2:d.TYPE1;let l,E;if(h===d.TYPE1)switch(n){case c.SMALL:l=t.ENEMY.TYPES.SMALL.HP,E=t.ENEMY.TYPES.SMALL.SCORE;break;case c.MEDIUM:l=t.ENEMY.TYPES.MEDIUM.HP,E=t.ENEMY.TYPES.MEDIUM.SCORE;break;case c.LARGE:l=t.ENEMY.TYPES.LARGE.HP,E=t.ENEMY.TYPES.LARGE.SCORE;break}else switch(n){case c.SMALL:l=t.ENEMY.TYPE2_SIZES.SMALL.HP,E=t.ENEMY.TYPE2_SIZES.SMALL.SCORE;break;case c.MEDIUM:l=t.ENEMY.TYPE2_SIZES.MEDIUM.HP,E=t.ENEMY.TYPE2_SIZES.MEDIUM.SCORE;break;case c.LARGE:l=t.ENEMY.TYPE2_SIZES.LARGE.HP,E=t.ENEMY.TYPE2_SIZES.LARGE.SCORE;break}const g=h===d.TYPE2?Math.random()>.3?"circular":"sine":Math.random()>.5?"sine":"linear";let p;return h===d.TYPE2?p={type:Math.random()>.5?"spread":"circular",interval:t.ENEMY.FIRING.INTERVAL*1.2,bulletSpeed:t.ENEMY.FIRING.BULLET_SPEED*.8,bulletCount:n===c.LARGE?5:3,spreadAngle:45}:p={type:"single",interval:t.ENEMY.FIRING.INTERVAL,bulletSpeed:t.ENEMY.FIRING.BULLET_SPEED},new Y({type:n,imageType:h,hp:l,score:E,movement:{type:g,speed:t.ENEMY.MOVEMENT.SPEED_MIN+Math.random()*t.ENEMY.MOVEMENT.SPEED_RANDOM,amplitude:g!=="linear"?t.ENEMY.MOVEMENT.SINE_AMPLITUDE_MIN+Math.random()*t.ENEMY.MOVEMENT.SINE_AMPLITUDE_RANDOM:void 0,frequency:g!=="linear"?t.ENEMY.MOVEMENT.SINE_FREQUENCY_MIN+Math.random()*t.ENEMY.MOVEMENT.SINE_FREQUENCY_RANDOM:void 0},firePattern:p},e,i)}reset(){this.spawnTimer=0,this.spawnInterval=t.SPAWNING.DEFAULT_INTERVAL}}class G{constructor(s,e,i,a,n,h){r(this,"player");r(this,"getEnemies");r(this,"getEnemyBullets");r(this,"getPlayerBullets");this.player=s,this.getEnemies=e,this.getEnemyBullets=i,this.getPlayerBullets=a}check(){const s={playerHit:!1,destroyedEnemies:[],hitBullets:[],hitPlayerBullets:[]},e=this.getEnemies(),i=this.getEnemyBullets(),a=this.getPlayerBullets();if(!this.player.isInvulnerable())for(const n of i)this.checkCircleCollision(this.player.getX(),this.player.getY(),this.player.getHitboxRadius(),n.getX(),n.getY(),n.getRadius())&&(s.playerHit=!0,s.hitBullets.push(n));for(const n of a)for(const h of e)if(h.isAlive()&&this.checkCircleCollision(n.getX(),n.getY(),n.getRadius(),h.getX(),h.getY(),h.getRadius())){h.takeDamage(n.getDamage()),s.hitPlayerBullets.push(n),h.isAlive()||s.destroyedEnemies.push(h);break}return s}checkCircleCollision(s,e,i,a,n,h){const l=a-s,E=n-e;return Math.sqrt(l*l+E*E)<i+h}}class b{constructor(){r(this,"score",0);r(this,"highScore",0);r(this,"combo",0);r(this,"maxCombo",0);const s=localStorage.getItem("shootingHighScore");s&&(this.highScore=parseInt(s,10))}addScore(s){this.score+=s*(1+this.combo*t.SCORE.COMBO_MULTIPLIER),this.combo++,this.maxCombo=Math.max(this.maxCombo,this.combo),this.score>this.highScore&&(this.highScore=this.score,localStorage.setItem("shootingHighScore",this.highScore.toString()))}resetCombo(){this.combo=0}getScore(){return Math.floor(this.score)}getHighScore(){return Math.floor(this.highScore)}getCombo(){return this.combo}reset(){this.score=0,this.combo=0,this.maxCombo=0}}class U{constructor(){r(this,"grazeRadius",t.GRAZE.RADIUS);r(this,"grazedBullets",new Set)}checkGraze(s,e){let i=0;const a=[];for(const h of e)if(!h.getIsPlayerBullet()&&!this.grazedBullets.has(h)){const l=this.getDistance(s.getX(),s.getY(),h.getX(),h.getY());l<this.grazeRadius&&l>s.getHitboxRadius()+h.getRadius()&&(this.grazedBullets.add(h),i++,a.push({bullet:h,x:h.getX(),y:h.getY()}))}const n=new Set(e);for(const h of this.grazedBullets)n.has(h)||this.grazedBullets.delete(h);return{count:i,events:a}}createGrazeEffect(s,e,i){const a=t.GRAZE.PARTICLE.COUNT;for(let n=0;n<a;n++){const h=new u;h.circle(0,0,t.GRAZE.PARTICLE.RADIUS).fill(t.GRAZE.PARTICLE.COLOR);const l=n/a*Math.PI*2,E=t.GRAZE.PARTICLE.SPEED_MIN+Math.random()*(t.GRAZE.PARTICLE.SPEED_MAX-t.GRAZE.PARTICLE.SPEED_MIN),g=Math.cos(l)*E,p=Math.sin(l)*E;h.x=e,h.y=i,s.addChild(h);let A=t.GRAZE.PARTICLE.LIFETIME;const T=()=>{if(A-=1/t.GRAZE.PARTICLE.TARGET_FPS,A<=0){s.removeChild(h);return}h.x+=g*(1/t.GRAZE.PARTICLE.TARGET_FPS),h.y+=p*(1/t.GRAZE.PARTICLE.TARGET_FPS),h.alpha=A/t.GRAZE.PARTICLE.LIFETIME,requestAnimationFrame(T)};requestAnimationFrame(T)}}getDistance(s,e,i,a){const n=i-s,h=a-e;return Math.sqrt(n*n+h*h)}reset(){this.grazedBullets.clear()}}class w extends O{constructor(e){super(e);r(this,"gameContainer");r(this,"inputHandler");r(this,"backgroundSprite1");r(this,"backgroundSprite2");r(this,"backgroundLoaded",!1);r(this,"player");r(this,"enemies",[]);r(this,"boss",null);r(this,"bullets",[]);r(this,"playerBullets",[]);r(this,"stageSystem");r(this,"enemySpawner");r(this,"collisionSystem");r(this,"scoreSystem");r(this,"grazeSystem");r(this,"gameAreaWidth");r(this,"gameAreaHeight");r(this,"lastScoreThreshold",0);this.gameAreaWidth=e.gameAreaWidth||t.GAME.AREA_WIDTH,this.gameAreaHeight=e.gameAreaHeight||t.GAME.AREA_HEIGHT}async setupGameSpecific(){await this.loadBackgroundAssets(),this.setupGameArea(),await this.loadEnemyAssets(),this.initPlayer(),this.initSystems(),this.setupInputHandler(),console.log("ShootingGameController: Game setup complete"),this.app.ticker.add(e=>this.update(e.deltaTime),this)}async loadBackgroundAssets(){try{await R.load(t.BACKGROUND.IMAGE_PATH),this.backgroundLoaded=!0,console.log("Background texture loaded successfully")}catch(e){console.error("Failed to load background texture:",e),this.backgroundLoaded=!1}}setupGameArea(){this.gameContainer=new M,this.app.stage.addChild(this.gameContainer);const e=_.from(t.BACKGROUND.IMAGE_PATH);this.backgroundSprite1=new P(e),this.backgroundSprite1.width=this.gameAreaWidth,this.backgroundSprite1.height=this.gameAreaHeight,this.backgroundSprite1.x=0,this.backgroundSprite1.y=0,this.gameContainer.addChild(this.backgroundSprite1),this.backgroundSprite2=new P(e),this.backgroundSprite2.width=this.gameAreaWidth,this.backgroundSprite2.height=this.gameAreaHeight,this.backgroundSprite2.x=0,this.backgroundSprite2.y=-this.gameAreaHeight,this.gameContainer.addChild(this.backgroundSprite2);const i=new u;i.rect(0,0,this.gameAreaWidth,this.gameAreaHeight).fill(16777215),this.gameContainer.mask=i,this.gameContainer.addChild(i)}async loadEnemyAssets(){try{await R.load(t.ENEMY.IMAGES.TYPE1.PATH),await R.load(t.ENEMY.IMAGES.TYPE2.PATH),console.log("Enemy textures loaded successfully")}catch(e){console.error("Failed to load enemy textures:",e)}}initPlayer(){this.player=new B({x:this.gameAreaWidth/2,y:this.gameAreaHeight-t.PLAYER.DEFAULT_Y_OFFSET,speed:t.PLAYER.SPEED,slowSpeed:t.PLAYER.SLOW_SPEED,hitboxRadius:t.PLAYER.HITBOX_RADIUS,fireRate:t.PLAYER.FIRE_RATE,maxHp:t.PLAYER.MAX_HP}),this.gameContainer.addChild(this.player.getSprite())}initSystems(){this.scoreSystem=new b;const e=this.options;this.stageSystem=new D(e.stageCount||t.STAGE.DEFAULT_MAX_STAGES),this.enemySpawner=new f(this.gameAreaWidth,this.gameAreaHeight),this.collisionSystem=new G(this.player,()=>this.enemies,()=>this.bullets,()=>this.playerBullets,this.gameAreaWidth,this.gameAreaHeight),this.grazeSystem=new U}setupInputHandler(){this.inputHandler=new C(this)}update(e){this.updateScroll(e),this.updateEntities(e),this.inputHandler.updateMovement(e),this.spawnEnemies(e),this.checkCollisions(),this.checkScoreThreshold(),this.cleanupEntities()}updateScroll(e){const i=t.BACKGROUND.SCROLL_SPEED*e;this.backgroundSprite1.y+=i,this.backgroundSprite2.y+=i,this.backgroundSprite1.y>=this.gameAreaHeight&&(this.backgroundSprite1.y=this.backgroundSprite2.y-this.gameAreaHeight),this.backgroundSprite2.y>=this.gameAreaHeight&&(this.backgroundSprite2.y=this.backgroundSprite1.y-this.gameAreaHeight)}updateEntities(e){this.player.update(e,S.targetFPMS),this.player.shoot().forEach(a=>{this.playerBullets.push(a),this.gameContainer.addChild(a.getSprite())}),this.enemies.forEach(a=>{a.update(e,S.targetFPMS),a.shouldFire()&&a.getFirePattern()&&a.createBullets(a.getFirePattern()).forEach(h=>{this.bullets.push(h),this.gameContainer.addChild(h.getSprite())})}),this.boss&&this.boss.update(e),this.bullets.forEach(a=>a.update(e,S.targetFPMS)),this.playerBullets.forEach(a=>a.update(e,S.targetFPMS))}spawnEnemies(e){!this.boss&&this.stageSystem.isActive()&&this.enemySpawner.update(e,this.stageSystem.getCurrentStage(),S.targetFPMS).forEach(a=>{this.enemies.push(a),this.gameContainer.addChild(a.getSprite())})}checkCollisions(){const e=this.collisionSystem.check();e.playerHit&&this.player.takeDamage(),e.destroyedEnemies.forEach(a=>{this.scoreSystem.addScore(a.getScore()),this.triggerBlockReveal(a.getX(),a.getY(),I.SMALL)}),e.hitBullets.forEach(a=>{this.gameContainer.removeChild(a.getSprite())}),this.bullets=this.bullets.filter(a=>!e.hitBullets.includes(a)),e.hitPlayerBullets.forEach(a=>{this.gameContainer.removeChild(a.getSprite())}),this.playerBullets=this.playerBullets.filter(a=>!e.hitPlayerBullets.includes(a));const i=this.grazeSystem.checkGraze(this.player,this.bullets);i.count>0&&(this.scoreSystem.addScore(i.count*t.GRAZE.SCORE_PER_BULLET),this.triggerBlockReveal(this.player.getX(),this.player.getY(),I.SMALL),i.events.forEach(a=>{this.grazeSystem.createGrazeEffect(this.gameContainer,a.x,a.y)}))}checkScoreThreshold(){const e=this.scoreSystem.getScore(),i=Math.floor(e/t.SCORE.BLOCK_REVEAL_THRESHOLD)*t.SCORE.BLOCK_REVEAL_THRESHOLD;i>this.lastScoreThreshold&&i>0&&(this.lastScoreThreshold=i,this.triggerBlockReveal(this.gameAreaWidth/2,this.gameAreaHeight/2,I.MEDIUM))}cleanupEntities(){this.enemies=this.enemies.filter(e=>!e.isAlive()||e.isOutOfBounds(this.gameAreaWidth,this.gameAreaHeight)?(this.gameContainer.removeChild(e.getSprite()),!1):!0),this.bullets=this.bullets.filter(e=>e.isOutOfBounds(this.gameAreaWidth,this.gameAreaHeight)?(this.gameContainer.removeChild(e.getSprite()),!1):!0),this.playerBullets=this.playerBullets.filter(e=>e.isOutOfBounds(this.gameAreaWidth,this.gameAreaHeight)?(this.gameContainer.removeChild(e.getSprite()),!1):!0)}triggerBlockReveal(e,i,a){const n=Math.random(),h=Math.random();this.blockReveal.reveal({x:n,y:h,radius:a,force:a*t.BLOCK_REVEAL.FORCE_MULTIPLIER,duration:t.BLOCK_REVEAL.DURATION})}movePlayer(e,i,a){this.player.move(e,i,a,S.targetFPMS),this.player.clampPosition(0,0,this.gameAreaWidth,this.gameAreaHeight)}setPlayerSlowMode(e){this.player.setSlowMode(e)}playerShoot(){this.player.shoot().forEach(i=>{this.playerBullets.push(i),this.gameContainer.addChild(i.getSprite())})}onImagesLoaded(){console.log("Shooting game images loaded"),this.inputHandler&&this.inputHandler.enable(),console.log("ShootingGameController: Images loaded, resize will be handled by setup completion")}setupAdditionalEventListeners(){}handleGameSpecificKeyDown(e){this.inputHandler.handleKeyDown(e)}onReset(){this.enemies.forEach(e=>this.gameContainer.removeChild(e.getSprite())),this.bullets.forEach(e=>this.gameContainer.removeChild(e.getSprite())),this.playerBullets.forEach(e=>this.gameContainer.removeChild(e.getSprite())),this.enemies=[],this.bullets=[],this.playerBullets=[],this.boss=null,this.player.reset(),this.scoreSystem.reset(),this.stageSystem.reset(),this.lastScoreThreshold=0}destroyGameSpecific(){this.app.ticker.remove(e=>this.update(e.deltaTime),this),this.inputHandler.destroy()}resize(){if(super.resize(),!this.gameContainer){console.warn("ShootingGameController: resize() called but gameContainer not initialized yet");return}if(!this.backgroundLoaded){console.warn("ShootingGameController: resize() called but background resources not loaded yet");return}console.log("ShootingGameController: Performing resize");const e=this.containerElement,i=e.clientWidth,a=e.clientHeight,n=t.GAME.AREA_RATIO,h=i*n,l=a,E=h/this.gameAreaWidth,g=l/this.gameAreaHeight,p=Math.min(E,g);this.gameContainer.scale.set(p);const A=this.gameAreaWidth*p,T=this.gameAreaHeight*p;this.gameContainer.x=(i-A)/2,this.gameContainer.y=(a-T)/2}}let m;async function v(){m=new w({containerId:"shooting-game-area",blockRevealContainerId:"block-reveal-area",backgroundImage:"./assets/images/background.png",foregroundImage:"./assets/images/foreground.png",blockSize:8,gravity:1e3,explosionForce:300,fadeOutDuration:500,stageCount:3,playerLives:3,continueCount:3});const o=()=>{var a,n,h;const s=((a=m.scoreSystem)==null?void 0:a.getScore())||0,e=((n=m.scoreSystem)==null?void 0:n.getHighScore())||0,i=((h=m.stageSystem)==null?void 0:h.getCurrentStage())||1;document.getElementById("score").textContent=s.toString(),document.getElementById("high-score").textContent=e.toString(),document.getElementById("stage").textContent=i.toString(),requestAnimationFrame(o)};o()}document.getElementById("reset-button").addEventListener("click",()=>{m&&m.reset()});window.addEventListener("load",v);
